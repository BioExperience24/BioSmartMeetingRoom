// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using _6.Repositories.DB;

#nullable disable

namespace _6.Repositories.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_7.Entities.Models.AccessChannel", b =>
                {
                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int?>("Channel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("channel")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.HasKey("Id")
                        .HasName("PK_access_channel_id");

                    b.ToTable("access_channel", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AccessControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<string>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("access_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Channel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("channel")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ControllerList")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("controller_list");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Delay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3)
                        .HasColumnName("delay");

                    b.Property<string>("IpController")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("0.0.0.0")
                        .HasColumnName("ip_controller");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("ModelController")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("reader")
                        .HasColumnName("model_controller");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<string>("RoomControllerFalco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_controller_falco");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_access_control_id");

                    b.ToTable("access_control", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AccessControllerFalco", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("AccessId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("access_id");

                    b.Property<string>("FalcoIp")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("falco_ip");

                    b.Property<string>("GroupAccess")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("group_access");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("UnitNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("unit_no")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_access_controller_falco_id");

                    b.ToTable("access_controller_falco", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AccessControllerType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_access_controller_type_id");

                    b.ToTable("access_controller_type", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AccessIntegrated", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("access_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_access_integrated_id");

                    b.ToTable("access_integrated", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AlarmIntegration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("active");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("ParamAuth")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("param_auth");

                    b.Property<string>("ParamFeed")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("param_feed");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("password");

                    b.Property<int?>("StatusIntegration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status_integration");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("token");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("updated_by");

                    b.Property<string>("UrlAuth")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_auth")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UrlFeedback")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url_feedback")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Username")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK_alarm_integration_id");

                    b.ToTable("alarm_integration", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Alocation", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(43)
                        .HasColumnType("nvarchar(43)")
                        .HasDefaultValue("")
                        .HasColumnName("department_code");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<int?>("InvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("invoice_status");

                    b.Property<int?>("InvoiceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("invoice_type");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("IsPermanent")
                        .HasColumnType("int")
                        .HasColumnName("is_permanent");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<int?>("ShowInInvitation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("show_in_invitation");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("updated_by");

                    b.HasKey("Generate")
                        .HasName("PK_alocation__generate");

                    b.ToTable("alocation", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AlocationMatrix", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("AlocationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("alocation_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("nik")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_alocation_matrix__generate");

                    b.HasIndex(new[] { "Generate" }, "alocation_matrix$_generate")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "Generate" }, "alocation_matrix$_generate"), false);

                    b.ToTable("alocation_matrix", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AlocationType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<int?>("InvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("IsPermanent")
                        .HasColumnType("int")
                        .HasColumnName("is_permanent");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_alocation_type_id");

                    b.HasIndex(new[] { "Generate" }, "alocation_type$_generate")
                        .IsUnique();

                    b.ToTable("alocation_type", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.AuthSerial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serial");

                    b.HasKey("Id")
                        .HasName("PK_auth_serial_id");

                    b.ToTable("auth_serial", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BatchUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("Time")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("time");

                    b.Property<int>("TotalRow")
                        .HasColumnType("int")
                        .HasColumnName("total_row");

                    b.Property<string>("TotalSize")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("total_size");

                    b.HasKey("Id")
                        .HasName("PK_batch_upload_id");

                    b.ToTable("batch_upload", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BeaconFloor", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CenterX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("center_x");

                    b.Property<int?>("CenterY")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("center_y");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("FloorLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("floor_length")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("FloorWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("floor_width")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("MeterPerPx")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("meter_per_px")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("MeterPerPx2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("meter_per_px2")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pixel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pixel")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("PlusHeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("plus_height")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("PlusWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("plus_width")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_beacon_floor_id");

                    b.ToTable("beacon_floor", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Booking", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("AlocationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("alocation_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlocationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alocation_name");

                    b.Property<string>("BookingDevices")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("booking_devices")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<string>("BookingId365")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("booking_id_365");

                    b.Property<string>("BookingIdGoogle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("booking_id_google");

                    b.Property<string>("BookingType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("general")
                        .HasColumnName("booking_type");

                    b.Property<DateTime>("CanceledAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("canceled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CanceledBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("canceled_by");

                    b.Property<string>("CanceledNote")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("canceled_note");

                    b.Property<int?>("Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("checkin_count");

                    b.Property<DateTime?>("CleaningEnd")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("cleaning_end")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CleaningStart")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("cleaning_start")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CleaningTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("cleaning_time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<long?>("CostTotalBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cost_total_booking")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("DurationPerMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("duration_per_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("DurationSavedRelease")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("duration_saved_release");

                    b.Property<DateTime>("EarlyEndedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("early_ended_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EarlyEndedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("early_ended_by");

                    b.Property<DateTime>("End")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("end");

                    b.Property<int>("EndEarlyMeeting")
                        .HasColumnType("int")
                        .HasColumnName("end_early_meeting");

                    b.Property<DateTime>("ExpiredAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("expired_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ExpiredBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("expired_by");

                    b.Property<int?>("ExtendedDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("extended_duration");

                    b.Property<string>("ExternalLink")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("external_link")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ExternalLink365")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("external_link_365");

                    b.Property<string>("ExternalLinkGoogle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("external_link_google");

                    b.Property<int?>("IsAccessTrigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_access_trigger");

                    b.Property<int>("IsAlive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("is_alive");

                    b.Property<int?>("IsApprove")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_approve");

                    b.Property<int>("IsCanceled")
                        .HasColumnType("int")
                        .HasColumnName("is_canceled");

                    b.Property<int?>("IsCleaningNeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_cleaning_need");

                    b.Property<int?>("IsConfigSettingEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_config_setting_enable");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsDevice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_device");

                    b.Property<int>("IsEar")
                        .HasColumnType("int")
                        .HasColumnName("is_ear");

                    b.Property<int?>("IsEnableApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_approval");

                    b.Property<int?>("IsEnableCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_checkin");

                    b.Property<int>("IsEnableCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("is_enable_checkin_count");

                    b.Property<int?>("IsEnablePermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(240)
                        .HasColumnName("is_enable_permission");

                    b.Property<int?>("IsEnableRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_recurring");

                    b.Property<int>("IsExpired")
                        .HasColumnType("int")
                        .HasColumnName("is_expired");

                    b.Property<short>("IsMeal")
                        .HasColumnType("smallint")
                        .HasColumnName("is_meal");

                    b.Property<short?>("IsMerge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("is_merge");

                    b.Property<int?>("IsMoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_moved");

                    b.Property<int?>("IsMovedAgree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_moved_agree");

                    b.Property<int>("IsNotifBeforeEndMeeting")
                        .HasColumnType("int")
                        .HasColumnName("is_notif_before_end_meeting");

                    b.Property<int>("IsNotifEndMeeting")
                        .HasColumnType("int")
                        .HasColumnName("is_notif_end_meeting");

                    b.Property<int>("IsPrivate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_private");

                    b.Property<int?>("IsRealeaseCheckinTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("is_realease_checkin_timeout");

                    b.Property<short>("IsRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("is_recurring");

                    b.Property<int?>("IsReleased")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_released");

                    b.Property<int>("IsRescheduled")
                        .HasColumnType("int")
                        .HasColumnName("is_rescheduled");

                    b.Property<int?>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_vip");

                    b.Property<string>("LastModifiedDateTime365")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("lastModifiedDateTime_365");

                    b.Property<string>("MeetingEndNote")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("meeting_end_note");

                    b.Property<string>("MergeRoom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("merge_room");

                    b.Property<string>("MergeRoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("merge_room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("MergeRoomName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("merge_room_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("MovedDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("moved_duration");

                    b.Property<string>("NoOrder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_order");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("participants");

                    b.Property<string>("PermissionCheckin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("pic")
                        .HasColumnName("permission_checkin");

                    b.Property<string>("PermissionEnd")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("pic")
                        .HasColumnName("permission_end");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pic");

                    b.Property<string>("RecurringId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("recurring_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("ReleaseRoomCheckinTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("release_room_checkin_time");

                    b.Property<DateTime>("RescheduledAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("rescheduled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RescheduledBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rescheduled_by");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("room_id");

                    b.Property<string>("RoomMeetingMove")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("room_meeting_move");

                    b.Property<string>("RoomMeetingOld")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("room_meeting_old");

                    b.Property<string>("RoomName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("room_name");

                    b.Property<DateTime?>("ServerDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("server_date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("ServerEnd")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("server_end")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("ServerStart")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("server_start")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("Start")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("start");

                    b.Property<string>("TextEarly")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("text_early")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Timezone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("timezone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int?>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("total_duration");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UserApproval")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("user_approval");

                    b.Property<DateTime?>("UserApprovalDatetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("user_approval_datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UserCheckin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("user_checkin");

                    b.Property<string>("UserCleaning")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("user_cleaning");

                    b.Property<string>("UserEndMeeting")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("user_end_meeting");

                    b.Property<int?>("VipApproveBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_approve_bypass");

                    b.Property<string>("VipForceMoved")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("vip_force_moved");

                    b.Property<int?>("VipLimitCapBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_limit_cap_bypass");

                    b.Property<int?>("VipLockRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_lock_room");

                    b.Property<string>("VipUser")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("vip_user");

                    b.HasKey("Id")
                        .HasName("PK_booking_id");

                    b.ToTable("booking", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingAlive", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_booking_alive_id");

                    b.ToTable("booking_alive", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingInvitation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("AttendanceReason")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasDefaultValue("")
                        .HasColumnName("attendance_reason");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int")
                        .HasColumnName("attendance_status");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<int?>("Checkin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("checkin");

                    b.Property<string>("Company")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("company");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("email");

                    b.Property<int?>("EndMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("end_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("ExecuteAttendance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("execute_attendance");

                    b.Property<int>("ExecuteDoorAccess")
                        .HasColumnType("int")
                        .HasColumnName("execute_door_access");

                    b.Property<int>("Internal")
                        .HasColumnType("int")
                        .HasColumnName("internal");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<short>("IsPic")
                        .HasColumnType("smallint")
                        .HasColumnName("is_pic");

                    b.Property<int?>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_vip");

                    b.Property<string>("LastUpdate365")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("lastUpdate_365");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("nik");

                    b.Property<string>("PinRoom")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("pin_room")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Position")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("position");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_booking_invitation_id");

                    b.ToTable("booking_invitation", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingInvoice", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Alocation")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("alocation")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("InvoiceFormat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("invoice_format")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("InvoiceGenerateNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("invoice_generate_no");

                    b.Property<string>("InvoiceNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("invoice_no");

                    b.Property<string>("InvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("invoice_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("MemoNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("memo_no")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ReferensiNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("referensi_no")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("RentCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("rent_cost")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("TimeBefore")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("time_before")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("TimePaid")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("time_paid")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("TimeSend")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("time_send")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_booking_invoice_id");

                    b.ToTable("booking_invoice", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AlocationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("alocation_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlocationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alocation_name");

                    b.Property<string>("AlocationType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("alocation_type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CostCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("cost_code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<string>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("invoice_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("InvoiceStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("invoice_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoInvoice")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_invoice");

                    b.Property<string>("NoUrut")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("no_urut")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("OutstandingStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("outstanding_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("PaidAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("paid_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("PaidBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("paid_by");

                    b.Property<DateTime?>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("sent_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("SentBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("sent_by");

                    b.Property<long?>("TotalCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("total_cost")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("total_duration")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("TotalMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("total_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_booking_invoice_detail_id");

                    b.ToTable("booking_invoice_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingInvoiceGenerate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlocationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("alocation_id");

                    b.Property<string>("ConfirmBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("confirm_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("DateConfirm")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("date_confirm")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("DateGenerate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("date_generate")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("DateSending")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("date_sending")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("GenerateBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("generate_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("InvoiceFormat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("invoice_format");

                    b.Property<string>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("invoice_id");

                    b.Property<int?>("InvoiceMonth1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_month1")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("InvoiceMonth2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("invoice_month2")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("InvoiceYears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("invoice_years")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("MemoNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("memo_no")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ReferensiNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("referensi_no")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("SendingBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sending_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TotalCost")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("total_cost")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("total_duration")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("TotalMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("total_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_booking_invoice_generate_id");

                    b.ToTable("booking_invoice_generate", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BookingRoomTr", b =>
                {
                    b.Property<string>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateOnly?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.ToTable("booking_room_trs", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Building", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DetailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detail_address");

                    b.Property<string>("GoogleMap")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("google_map")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("default.jpeg")
                        .HasColumnName("image");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Koordinate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("koordinate")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Timezone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("timezone");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_building_generate");

                    b.ToTable("building", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.BuildingFloor", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate")
                        .HasAnnotation("Relational:JsonPropertyName", "_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<long?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "building_id");

                    b.Property<int?>("CenterX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("center_x")
                        .HasAnnotation("Relational:JsonPropertyName", "center_x");

                    b.Property<int?>("CenterY")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("center_y")
                        .HasAnnotation("Relational:JsonPropertyName", "center_y");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "created_by");

                    b.Property<double?>("FloorLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("floor_length")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "floor_length");

                    b.Property<double?>("FloorWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("floor_width")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "floor_width");

                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "image");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("MeterPerPx")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("meter_per_px")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "meter_per_px");

                    b.Property<string>("MeterPerPx2")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("meter_per_px2")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "meter_per_px2");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Pixel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pixel")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "pixel");

                    b.Property<double?>("PlusHeight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("plus_height")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "plus_height");

                    b.Property<double?>("PlusWidth")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("plus_width")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "plus_width");

                    b.Property<int?>("Position")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "position");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_by");

                    b.HasKey("Generate")
                        .HasName("PK_building_floor__generate");

                    b.ToTable("building_floor", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("city");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Icon")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Logo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("logo")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("MenuBar")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("menu_bar")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("picture");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("state");

                    b.Property<int>("UpdateAt")
                        .HasColumnType("int")
                        .HasColumnName("update_at");

                    b.Property<string>("UrlAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url_address");

                    b.HasKey("Id")
                        .HasName("PK_company_id");

                    b.ToTable("company", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("department_name");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("foto");

                    b.Property<string>("IdPerusahaan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_perusahaan");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("UpdateAt")
                        .HasColumnType("int")
                        .HasColumnName("update_at");

                    b.HasKey("Id")
                        .HasName("PK_department_id_department");

                    b.HasIndex("IdPerusahaan");

                    b.ToTable("department", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskBooking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AlocationId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("alocation_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AlocationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alocation_name");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("CanceledAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("canceled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CanceledBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("canceled_by");

                    b.Property<string>("CanceledNote")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("canceled_note");

                    b.Property<long?>("CostTotalBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("cost_total_booking")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("DeskId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("desk_id");

                    b.Property<string>("DeskName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("desk_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("DurationPerMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("duration_per_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("EarlyEndedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("early_ended_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EarlyEndedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("early_ended_by");

                    b.Property<DateTime>("End")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("end");

                    b.Property<int?>("EndEarlyMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("end_early_meeting");

                    b.Property<DateTime>("ExpiredAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("expired_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ExpiredBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("expired_by");

                    b.Property<int?>("ExtendedDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("extended_duration");

                    b.Property<int?>("IsAccessTrigger")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_access_trigger");

                    b.Property<int>("IsAlive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("is_alive");

                    b.Property<int>("IsCanceled")
                        .HasColumnType("int")
                        .HasColumnName("is_canceled");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsDevice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_device");

                    b.Property<int?>("IsEar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_ear")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("IsExpired")
                        .HasColumnType("int")
                        .HasColumnName("is_expired");

                    b.Property<short>("IsMeal")
                        .HasColumnType("smallint")
                        .HasColumnName("is_meal");

                    b.Property<int>("IsNotifBeforeEndMeeting")
                        .HasColumnType("int")
                        .HasColumnName("is_notif_before_end_meeting");

                    b.Property<int>("IsNotifEndMeeting")
                        .HasColumnType("int")
                        .HasColumnName("is_notif_end_meeting");

                    b.Property<int>("IsRescheduled")
                        .HasColumnType("int")
                        .HasColumnName("is_rescheduled");

                    b.Property<string>("NoOrder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("no_order");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("participants");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pic");

                    b.Property<DateTime>("RescheduledAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("rescheduled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RescheduledBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rescheduled_by");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("room_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("Start")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("start");

                    b.Property<string>("TextEarly")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("text_early")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<int?>("TotalDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("total_duration");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_desk_booking_id");

                    b.ToTable("desk_booking", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskBookingInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceReason")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasDefaultValue("")
                        .HasColumnName("attendance_reason");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int")
                        .HasColumnName("attendance_status");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<string>("Company")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("company");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("email");

                    b.Property<int?>("ExecuteAttendance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("execute_attendance");

                    b.Property<int>("ExecuteDoorAccess")
                        .HasColumnType("int")
                        .HasColumnName("execute_door_access");

                    b.Property<int>("Internal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("internal");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<short>("IsPic")
                        .HasColumnType("smallint")
                        .HasColumnName("is_pic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("nik");

                    b.Property<string>("PinRoom")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("pin_room")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Position")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("position");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_desk_booking_invitation_id");

                    b.ToTable("desk_booking_invitation", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskController", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<int?>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("capacity")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("IpAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ip_address")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_desk_controller__generate");

                    b.ToTable("desk_controller", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskControllerInitial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ControllerId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("controller_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeskId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("desk_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeskRoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("desk_room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Socket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("socket")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_desk_controller_initial_id");

                    b.ToTable("desk_controller_initial", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttendanceReason")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasDefaultValue("")
                        .HasColumnName("attendance_reason");

                    b.Property<int>("AttendanceStatus")
                        .HasColumnType("int")
                        .HasColumnName("attendance_status");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<string>("Company")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("company");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("email");

                    b.Property<int?>("ExecuteAttendance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("execute_attendance");

                    b.Property<int>("ExecuteDoorAccess")
                        .HasColumnType("int")
                        .HasColumnName("execute_door_access");

                    b.Property<int>("Internal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("internal");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<short>("IsPic")
                        .HasColumnType("smallint")
                        .HasColumnName("is_pic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("nik");

                    b.Property<string>("PinRoom")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("pin_room")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Position")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("position");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_desk_invitation_id");

                    b.ToTable("desk_invitation", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskRoom", b =>
                {
                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<int>("AutomationId")
                        .HasColumnType("int")
                        .HasColumnName("automation_id");

                    b.Property<int?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("FacilityRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facility_room");

                    b.Property<string>("GoogleMap")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("google_map")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image2");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<short?>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("is_disabled")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<long>("Price")
                        .HasColumnType("bigint")
                        .HasColumnName("price");

                    b.Property<string>("RoomMap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("room_map");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("WorkDay")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("work_day");

                    b.Property<TimeOnly>("WorkEnd")
                        .HasColumnType("time")
                        .HasColumnName("work_end");

                    b.Property<TimeOnly>("WorkStart")
                        .HasColumnType("time")
                        .HasColumnName("work_start");

                    b.Property<string>("WorkTime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("work_time");

                    b.HasKey("Generate")
                        .HasName("PK_desk_room__generate");

                    b.ToTable("desk_room", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskRoomTable", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<int?>("BlockNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("block_number")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeskId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("desk_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeskRoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("desk_room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("PointerDeskX")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pointer_desk_x")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("PointerDeskY")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pointer_desk_y")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("zone_id")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_desk_room_table__generate");

                    b.ToTable("desk_room_table", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DeskRoomZone", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Color")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("color")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeskRoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("desk_room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pointer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pointer")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<double?>("Size")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("size")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ZoneId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("zone_id")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_desk_room_zone__generate");

                    b.ToTable("desk_room_zone", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.DevicePlayerIntegration", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("HardwareId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("hardware_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Info")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("info");

                    b.Property<int?>("IsActived")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_actived");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Mac")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("mac");

                    b.Property<string>("Os")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("os");

                    b.Property<string>("Serial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("serial");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("type");

                    b.Property<string>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("uuid");

                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("version");

                    b.HasKey("Generate", "Id")
                        .HasName("PK_device_player_integration__generate");

                    b.ToTable("device_player_integration", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Divisi", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_divisi");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("int")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("DivisiName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("divisi_name");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("foto");

                    b.Property<string>("IdDepartment")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_department");

                    b.Property<string>("IdPerusahaan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("id_perusahaan");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("UpdateAt")
                        .HasColumnType("int")
                        .HasColumnName("update_at");

                    b.HasKey("Id")
                        .HasName("PK_divisi_id_divisi");

                    b.ToTable("divisi", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<DateOnly?>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("birth_date")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("card_number");

                    b.Property<string>("CardNumberReal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("card_number_real");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("department_id");

                    b.Property<string>("DivisionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("division_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FrId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("fr_id");

                    b.Property<string>("GbId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("gb_id");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("gender");

                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("HeadEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("head_employee_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("IsProtected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_protected")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_vip");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nik");

                    b.Property<string>("NikDisplay")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nik_display")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoExt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("no_ext")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoPhone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue(" ")
                        .HasColumnName("no_phone");

                    b.Property<string>("PasswordMobile")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("")
                        .HasColumnName("password_mobile");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("photo");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<int?>("VipApproveBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_approve_bypass");

                    b.Property<int?>("VipLimitCapBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_limit_cap_bypass");

                    b.Property<int?>("VipLockRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_lock_room");

                    b.HasKey("Id")
                        .HasName("PK_employee_id");

                    b.HasIndex(new[] { "Generate" }, "employee$_generate")
                        .IsUnique();

                    b.ToTable("employee", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Facility", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("GoogleIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("google_icon");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_facility_id");

                    b.ToTable("facility", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.HelpItGa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("Datetime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DoneAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("done_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DoneBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("done_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(0)");

                    b.Property<string>("ProblemFacility")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("problem_facility");

                    b.Property<string>("ProblemReason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("problem_reason");

                    b.Property<DateTime?>("ProcessAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("process_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ProcessBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("process_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("RejectAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("reject_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RejectBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reject_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ResponseDone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("response_done")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ResponseReject")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("response_reject")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("room_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("subject");

                    b.Property<int?>("TimeUntilDoneAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("time_until_done_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK__help_it___3213E83F112681DD");

                    b.ToTable("help_it_ga", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.HelpdeskMonitor", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<int>("Action")
                        .HasColumnType("int")
                        .HasColumnName("action");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("comment");

                    b.Property<DateTime>("Datetime")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime");

                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ReasonResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason_response");

                    b.Property<int>("Response")
                        .HasColumnType("int")
                        .HasColumnName("response");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_id");

                    b.HasKey("Generate")
                        .HasName("PK_helpdesk_monitor__generate");

                    b.ToTable("helpdesk_monitor", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.HttpUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("headers");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<short>("IsEnable")
                        .HasColumnType("smallint")
                        .HasColumnName("is_enabled");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("http_url", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.IdOnly", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("id");

                    b.ToTable("IdOnly");
                });

            modelBuilder.Entity("_7.Entities.Models.Integration365", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_token");

                    b.Property<string>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("account_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("RefreshAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("refresh_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("Scope")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("scope");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UserPrincipalName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userPrincipalName")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_integration_365_id");

                    b.ToTable("integration_365", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.KioskDisplay", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Background")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("background")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayHwSerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_hw_serial")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplaySerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_serial")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayUuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("display_uuid")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<short?>("IsLogged")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("is_logged");

                    b.Property<string>("Koordinate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("koordinate")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("LastLogged")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("last_logged")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RunningText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("running_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TitleKiosk")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_kiosk")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_kiosk_display_id");

                    b.ToTable("kiosk_display", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Level", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("DefaultMenu")
                        .HasColumnType("int")
                        .HasColumnName("default_menu");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("SortLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_level")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_level_id");

                    b.ToTable("level", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LevelDescriptiion", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.HasKey("Id")
                        .HasName("PK_level_descriptiion_id");

                    b.ToTable("level_descriptiion", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LevelDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Coment")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("coment")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.HasKey("Id")
                        .HasName("PK_level_detail_id");

                    b.ToTable("level_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LevelHeaderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Coment")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("coment")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("menu_id");

                    b.HasKey("Id")
                        .HasName("PK_level_header_detail_id");

                    b.ToTable("level_header_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LicenseList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExpiredAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("expired_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsLifetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_lifetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Module")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("PlatformSerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("platform_serial")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Qty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("qty")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_license_list_id");

                    b.ToTable("license_list", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LicenseSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CheckedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("checked_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("customer_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("device_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DistributorId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("distributor_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Ext")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("ext");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LicenseType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("license_type");

                    b.Property<string>("Pathdownload")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pathdownload")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Platform")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("platform")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Serial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("serial")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Webhost")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("webhost")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_license_setting_id");

                    b.ToTable("license_setting", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Locker", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("AutoReserve")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("auto_reserve")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("IpLocker")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ip_locker")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_locker__generate");

                    b.ToTable("locker", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("activity");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("Datetime")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK_log_id");

                    b.ToTable("log", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LogAccessRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_default");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("msg");

                    b.Property<string>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nik")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("pin")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_log_access_room_id");

                    b.ToTable("log_access_room", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LogActivity", b =>
                {
                    b.Property<long>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Generate"));

                    b.Property<string>("AccessAction")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("access_action");

                    b.Property<string>("AccessDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_description");

                    b.Property<string>("AccessIp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("access_ip");

                    b.Property<int>("AccessQuery")
                        .HasColumnType("int")
                        .HasColumnName("access_query");

                    b.Property<DateTime>("AccessTime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("access_time")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AccessUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("access_url");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nik");

                    b.HasKey("Generate")
                        .HasName("PK_log_activity__generate");

                    b.ToTable("log_activity", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.LogServicesAccessDoor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Card")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("card")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Msg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("msg");

                    b.Property<string>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nik")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pin")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK_log_services_access_door_id");

                    b.ToTable("log_services_access_door", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Menu", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon");

                    b.Property<int>("IsChild")
                        .HasColumnType("int")
                        .HasColumnName("is_child");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int")
                        .HasColumnName("menu_group_id");

                    b.Property<string>("ModuleText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("module_text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("sort");

                    b.Property<string>("TypeIcon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type_icon");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PK_menu_id");

                    b.ToTable("menu", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.MenuApp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon");

                    b.Property<int>("IsChild")
                        .HasColumnType("int")
                        .HasColumnName("is_child");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int")
                        .HasColumnName("menu_group_id");

                    b.Property<string>("ModuleText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("module_text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("sort");

                    b.Property<string>("TypeIcon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type_icon");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PK_menu_apps_id");

                    b.ToTable("menu_apps", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.MenuGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_menu_group_id");

                    b.ToTable("menu_group", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.MenuHeader", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Icon")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ModuleText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Sort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Url")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_menu_headers__generate");

                    b.ToTable("menu_headers", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.ModuleBackend", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("module_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"));

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasColumnName("is_enabled");

                    b.Property<string>("ModuleSerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("module_serial")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ModuleText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("module_text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("ModuleId")
                        .HasName("PK_module_backend_module_id");

                    b.ToTable("module_backend", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotifBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    b.Property<int>("IsInvited")
                        .HasColumnType("int")
                        .HasColumnName("is_invited");

                    b.Property<int>("IsNotifSend")
                        .HasColumnType("int")
                        .HasColumnName("is_notifSend");

                    b.Property<int>("IsNotifhandler")
                        .HasColumnType("int")
                        .HasColumnName("is_notifhandler");

                    b.Property<int>("IsReschedule")
                        .HasColumnType("int")
                        .HasColumnName("is_reschedule");

                    b.Property<string>("NotifId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("notif_id");

                    b.HasKey("Id")
                        .HasName("PK_notif_booking_id");

                    b.ToTable("notif_booking", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotificationAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_read");

                    b.Property<int?>("IsSending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_sending");

                    b.Property<string>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nik")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Title")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("title");

                    b.Property<int?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_notification_admin_id");

                    b.ToTable("notification_admin", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotificationConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<string>("Authorization")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authorization");

                    b.Property<string>("Topics")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("topics")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PK_notification_config_id");

                    b.ToTable("notification_config", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotificationData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsSending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_sending")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nik")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Title")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("title");

                    b.Property<int?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Value")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("value")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_notification_data_id");

                    b.ToTable("notification_data", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotificationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cololr")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("cololr")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Route")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("route")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Table")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("table")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Topics")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("topics")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Where")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("where")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_notification_type_id");

                    b.ToTable("notification_type", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.NotificationTypeAdmin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Element")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("element");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Route")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("route")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_notification_type_admin_id");

                    b.ToTable("notification_type_admin", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Pantry", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("days");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detail");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("employee_id");

                    b.Property<int?>("IsApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_approval");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsInternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("is_internal");

                    b.Property<int?>("IsShowPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_show_price");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<TimeOnly>("OpeningHoursEnd")
                        .HasColumnType("time")
                        .HasColumnName("opening_hours_end");

                    b.Property<TimeOnly>("OpeningHoursStart")
                        .HasColumnType("time")
                        .HasColumnName("opening_hours_start");

                    b.Property<string>("OwnerPantry")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("owner_pantry")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pic");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_pantry_id");

                    b.ToTable("pantry", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryDetail", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<long>("PantryId")
                        .HasColumnType("bigint")
                        .HasColumnName("pantry_id");

                    b.Property<string>("Pic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pic");

                    b.Property<int>("PrefixId")
                        .HasColumnType("int")
                        .HasColumnName("prefix_id");

                    b.Property<int?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("price");

                    b.Property<int>("Rasio")
                        .HasColumnType("int")
                        .HasColumnName("rasio");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_pantry_detail_id");

                    b.ToTable("pantry_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryDetailMenuVariant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("id");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Max")
                        .HasColumnType("int")
                        .HasColumnName("max");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("menu_id");

                    b.Property<int>("Min")
                        .HasColumnType("int")
                        .HasColumnName("min");

                    b.Property<int>("Multiple")
                        .HasColumnType("int")
                        .HasColumnName("multiple");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_pantry_detail_menu_variant_id");

                    b.ToTable("pantry_detail_menu_variant", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryDetailMenuVariantDetail", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("name");

                    b.Property<int?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("price");

                    b.Property<string>("VariantId")
                        .IsRequired()
                        .HasMaxLength(33)
                        .HasColumnType("nvarchar(33)")
                        .HasColumnName("variant_id");

                    b.HasKey("Id")
                        .HasName("PK_pantry_detail_menu_variant_detail_id");

                    b.ToTable("pantry_detail_menu_variant_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryDisplay", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Background")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("background");

                    b.Property<int?>("BackgroundUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("background_update")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ColorAvailable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValue("")
                        .HasColumnName("color_available");

                    b.Property<string>("ColorOccupied")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValue("")
                        .HasColumnName("color_occupied");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<string>("DisableMsg")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("disable_msg");

                    b.Property<string>("DisplaySerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("display_serial");

                    b.Property<int?>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("enabled");

                    b.Property<string>("HardwareInfo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("hardware_info");

                    b.Property<DateTime?>("HardwareLastsync")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("hardware_lastsync")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("HardwareUuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("hardware_uuid");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("RoomSelect")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("room_select");

                    b.Property<int?>("StatusSync")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status_sync");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("general")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK_pantry_display_id");

                    b.ToTable("pantry_display", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryMenuPaket", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<long>("PantryId")
                        .HasColumnType("bigint")
                        .HasColumnName("pantry_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK_pantry_menu_paket_id");

                    b.HasIndex("PantryId");

                    b.ToTable("pantry_menu_paket", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryMenuPaketD", b =>
                {
                    b.Property<long>("MenuId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_id");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("package_id");

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.HasKey("MenuId", "PackageId");

                    b.HasIndex("PackageId");

                    b.ToTable("pantry_menu_paket_d", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryNotif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<int>("IsNotifhandler")
                        .HasColumnType("int")
                        .HasColumnName("is_notifhandler");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("NotifId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("notif_id");

                    b.Property<long>("PantryTrsId")
                        .HasColumnType("bigint")
                        .HasColumnName("pantry_trs_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PK_pantry_notif_id");

                    b.ToTable("pantry_notif", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantrySatuan", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_pantry_satuan_id");

                    b.ToTable("pantry_satuan", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryTransaksi", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("id");

                    b.Property<int>("ApprovalHead")
                        .HasColumnType("int")
                        .HasColumnName("approval_head");

                    b.Property<DateTime?>("ApprovedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("approved_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("approved_by");

                    b.Property<DateTime?>("ApprovedHeadAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("approved_head_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ApprovedHeadBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("(NULL)")
                        .HasColumnName("approved_head_by");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("CanceledAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("canceled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CanceledBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("canceled_by");

                    b.Property<string>("CanceledPantryBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("canceled_pantry_by");

                    b.Property<int>("Complete")
                        .HasColumnType("int")
                        .HasColumnName("complete");

                    b.Property<DateTime>("CompletedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("completed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CompletedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("completed_by");

                    b.Property<string>("CompletedPantryBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("completed_pantry_by");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Done")
                        .HasColumnType("int")
                        .HasColumnName("done");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("ExpiredAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("expired_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Failed")
                        .HasColumnType("int")
                        .HasColumnName("failed");

                    b.Property<string>("FromPantry")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("from_pantry")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("HeadEmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("(NULL)")
                        .HasColumnName("head_employee_id");

                    b.Property<int>("IsBlive")
                        .HasColumnType("int")
                        .HasColumnName("is_blive");

                    b.Property<int>("IsCanceled")
                        .HasColumnType("int")
                        .HasColumnName("is_canceled");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("IsExpired")
                        .HasColumnType("int")
                        .HasColumnName("is_expired");

                    b.Property<int>("IsRejectedPantry")
                        .HasColumnType("int")
                        .HasColumnName("is_rejected_pantry");

                    b.Property<int>("IsTrashpantry")
                        .HasColumnType("int")
                        .HasColumnName("is_trashpantry");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("NoteCanceled")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("note_canceled");

                    b.Property<string>("NoteReject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note_reject");

                    b.Property<DateTime>("OrderDatetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("order_datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("OrderDatetimeBefore")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("order_datetime_before")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("order_no");

                    b.Property<int>("OrderSt")
                        .HasColumnType("int")
                        .HasColumnName("order_st");

                    b.Property<string>("OrderStName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("order_st_name");

                    b.Property<string>("PackageId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("package_id");

                    b.Property<long>("PantryId")
                        .HasColumnType("bigint")
                        .HasColumnName("pantry_id");

                    b.Property<int?>("Pending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("pending");

                    b.Property<DateTime?>("PendingAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("pending_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("Process")
                        .HasColumnType("int")
                        .HasColumnName("process");

                    b.Property<DateTime?>("ProcessAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("process_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ProcessBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("process_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ProcessPantryBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("process_pantry_by");

                    b.Property<DateTime>("RejectedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("rejected_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rejected_by");

                    b.Property<string>("RejectedPantryBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("rejected_pantry_by");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("room_id");

                    b.Property<string>("Timezone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("timezone");

                    b.Property<string>("ToPantry")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("to_pantry")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Via")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("via");

                    b.HasKey("Id")
                        .HasName("PK_pantry_transaksi_id");

                    b.ToTable("pantry_transaksi", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryTransaksiD", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Detailorder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detailorder");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("IsRejected")
                        .HasColumnType("int")
                        .HasColumnName("is_rejected");

                    b.Property<long?>("MenuId")
                        .HasColumnType("bigint")
                        .HasColumnName("menu_id");

                    b.Property<string>("NoteOrder")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note_order");

                    b.Property<string>("NoteReject")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note_reject");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<DateTime>("RejectedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("rejected_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RejectedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("rejected_by");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("TransaksiId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("transaksi_id");

                    b.HasKey("Id")
                        .HasName("PK_pantry_transaksi_d_id");

                    b.ToTable("pantry_transaksi_d", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryTransaksiStatus", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK_pantry_transaksi_status_id");

                    b.ToTable("pantry_transaksi_status", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Room", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int>("AutomationId")
                        .HasColumnType("int")
                        .HasColumnName("automation_id")
                        .HasAnnotation("Relational:JsonPropertyName", "automation_id");

                    b.Property<long?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "building_id");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity")
                        .HasAnnotation("Relational:JsonPropertyName", "capacity");

                    b.Property<int?>("ConfigAdvanceBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(7)
                        .HasColumnName("config_advance_booking")
                        .HasAnnotation("Relational:JsonPropertyName", "config_advance_booking");

                    b.Property<int?>("ConfigAdvanceCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("config_advance_checkin")
                        .HasAnnotation("Relational:JsonPropertyName", "config_advance_checkin");

                    b.Property<string>("ConfigApprovalUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_approval_user")
                        .HasAnnotation("Relational:JsonPropertyName", "config_approval_user");

                    b.Property<string>("ConfigGoogle")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("config_google")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "config_google");

                    b.Property<int?>("ConfigMaxDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(240)
                        .HasColumnName("config_max_duration")
                        .HasAnnotation("Relational:JsonPropertyName", "config_max_duration");

                    b.Property<string>("ConfigMicrosoft")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("config_microsoft")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "config_microsoft");

                    b.Property<int?>("ConfigMinDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("config_min_duration")
                        .HasAnnotation("Relational:JsonPropertyName", "config_min_duration");

                    b.Property<int>("ConfigParticipantCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("config_participant_checkin_count")
                        .HasAnnotation("Relational:JsonPropertyName", "config_participant_checkin_count");

                    b.Property<string>("ConfigPermissionCheckin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("pic")
                        .HasColumnName("config_permission_checkin")
                        .HasAnnotation("Relational:JsonPropertyName", "config_permission_checkin");

                    b.Property<string>("ConfigPermissionEnd")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("pic")
                        .HasColumnName("config_permission_end")
                        .HasAnnotation("Relational:JsonPropertyName", "config_permission_end");

                    b.Property<string>("ConfigPermissionUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_permission_user")
                        .HasAnnotation("Relational:JsonPropertyName", "config_permission_user");

                    b.Property<int?>("ConfigReleaseRoomCheckinTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("config_release_room_checkin_timeout")
                        .HasAnnotation("Relational:JsonPropertyName", "config_release_room_checkin_timeout");

                    b.Property<string>("ConfigRoomForUsage")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("config_room_for_usage")
                        .HasAnnotation("Relational:JsonPropertyName", "config_room_for_usage");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<int?>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("FacilityRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facility_room")
                        .HasAnnotation("Relational:JsonPropertyName", "facility_room");

                    b.Property<long?>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("floor_id")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "floor_id");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("google_map")
                        .HasAnnotation("Relational:JsonPropertyName", "google_map");

                    b.Property<string>("Image")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("default.jpeg")
                        .HasColumnName("image")
                        .HasAnnotation("Relational:JsonPropertyName", "image");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image2");

                    b.Property<short>("IsAutomation")
                        .HasColumnType("smallint")
                        .HasColumnName("is_automation")
                        .HasAnnotation("Relational:JsonPropertyName", "is_automation");

                    b.Property<short?>("IsBeacon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLINT")
                        .HasDefaultValue((short)0)
                        .HasColumnName("is_beacon")
                        .HasAnnotation("Relational:JsonPropertyName", "is_beacon");

                    b.Property<int?>("IsConfigSettingEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_config_setting_enable")
                        .HasAnnotation("Relational:JsonPropertyName", "is_config_setting_enable");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<short?>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("is_disabled")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "is_disabled");

                    b.Property<int?>("IsEnableApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_approval")
                        .HasAnnotation("Relational:JsonPropertyName", "is_enable_approval");

                    b.Property<int?>("IsEnableCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_checkin")
                        .HasAnnotation("Relational:JsonPropertyName", "is_enable_checkin");

                    b.Property<int?>("IsEnableCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_checkin_count")
                        .HasAnnotation("Relational:JsonPropertyName", "is_enable_checkin_count");

                    b.Property<int?>("IsEnablePermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_permission")
                        .HasAnnotation("Relational:JsonPropertyName", "is_enable_permission");

                    b.Property<int?>("IsEnableRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_recurring")
                        .HasAnnotation("Relational:JsonPropertyName", "is_enable_recurring");

                    b.Property<int?>("IsRealeaseCheckinTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_realease_checkin_timeout")
                        .HasAnnotation("Relational:JsonPropertyName", "is_realease_checkin_timeout");

                    b.Property<string>("KindRoom")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("room")
                        .HasColumnName("kind_room")
                        .HasAnnotation("Relational:JsonPropertyName", "kind_room");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("location")
                        .HasAnnotation("Relational:JsonPropertyName", "location");

                    b.Property<string>("MultipleImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("multiple_image")
                        .HasAnnotation("Relational:JsonPropertyName", "multiple_image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<long>("Price")
                        .HasColumnType("bigint")
                        .HasColumnName("price")
                        .HasAnnotation("Relational:JsonPropertyName", "price");

                    b.Property<string>("Radid")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("radid")
                        .HasAnnotation("Relational:JsonPropertyName", "radid");

                    b.Property<string>("TypeRoom")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("single")
                        .HasColumnName("type_room")
                        .HasAnnotation("Relational:JsonPropertyName", "type_room");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<string>("WorkDay")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("work_day")
                        .HasAnnotation("Relational:JsonPropertyName", "work_day");

                    b.Property<string>("WorkEnd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_end")
                        .HasAnnotation("Relational:JsonPropertyName", "work_end");

                    b.Property<string>("WorkStart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_start")
                        .HasAnnotation("Relational:JsonPropertyName", "work_start");

                    b.Property<string>("WorkTime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("work_time")
                        .HasAnnotation("Relational:JsonPropertyName", "work_time");

                    b.HasKey("Id")
                        .HasName("PK_room_id");

                    b.ToTable("room", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Room365", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AudioDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("audioDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("BookingType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bookingType")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Building")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("building")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("capacity")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("displayDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("displayName");

                    b.Property<string>("EmailAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("emailAddress");

                    b.Property<string>("FloorLabel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("floorLabel")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("FloorNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("floorNumber")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("GeoCoordinates")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("geoCoordinates")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<int?>("Initial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("initial");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<short?>("IsWheelChairAccessible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("isWheelChairAccessible")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Label")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("label")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Nickname")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nickname")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Tags")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tags")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("VideoDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("videoDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_room_365__generate");

                    b.ToTable("room_365", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomAutomation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Devices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("devices");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ip_address");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("room");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("serial");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_room_automation_id");

                    b.ToTable("room_automation", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomDetail", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("Datetime")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("FacilityId")
                        .HasMaxLength(255)
                        .HasColumnType("bigint")
                        .HasColumnName("facility_id");

                    b.Property<long?>("RoomId")
                        .HasMaxLength(255)
                        .HasColumnType("bigint")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("PK_room_detail_id");

                    b.ToTable("room_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomDisplay", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Background")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("background");

                    b.Property<int?>("BackgroundUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("background_update")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("building_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ColorAvailable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValue("")
                        .HasColumnName("color_available");

                    b.Property<string>("ColorOccupied")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasDefaultValue("")
                        .HasColumnName("color_occupied");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("DisableMsg")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("disable_msg");

                    b.Property<string>("DisplaySerial")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("display_serial");

                    b.Property<int?>("EnableSignage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("enable_signage");

                    b.Property<int?>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("enabled");

                    b.Property<long?>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("floor_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("HardwareInfo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("hardware_info");

                    b.Property<DateTime?>("HardwareLastsync")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("hardware_lastsync")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("HardwareUuid")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("hardware_uuid");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("room_id");

                    b.Property<string>("RoomSelect")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("room_select");

                    b.Property<string>("SignageMedia")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("signage_media");

                    b.Property<string>("SignageType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("signage_type");

                    b.Property<int?>("SignageUpdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("signage_update");

                    b.Property<int?>("StatusSync")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("status_sync");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("general")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK_room_display_id");

                    b.ToTable("room_display", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomDisplayInformation", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<long?>("DisplayId")
                        .HasColumnType("bigint")
                        .HasColumnName("display_id");

                    b.Property<int?>("Distance")
                        .HasColumnType("int")
                        .HasColumnName("distance");

                    b.Property<string>("Icon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("icon");

                    b.Property<string>("RoomId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("room_id");

                    b.HasKey("Generate")
                        .HasName("PK_room_display_information__generate");

                    b.ToTable("room_display_information", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomForUsage", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_room_for_usage_id");

                    b.ToTable("room_for_usage", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomForUsageDetail", b =>
                {
                    b.Property<int?>("External")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("external");

                    b.Property<int?>("Internal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("internal");

                    b.Property<int?>("MinCap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("min_cap")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<long?>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("bigint")
                        .HasColumnName("room_id")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("RoomUsageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("room_usage_id")
                        .HasDefaultValueSql("(NULL)");

                    b.ToTable("room_for_usage_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomGoogle", b =>
                {
                    b.Property<int>("Generate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("_generate");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Generate"));

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AudioDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("audioDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("BookingType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("bookingType")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Building")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("building")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("capacity")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("displayDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("displayName");

                    b.Property<string>("EmailAddress")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("emailAddress");

                    b.Property<string>("FloorLabel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("floorLabel")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("FloorNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("floorNumber")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("GeoCoordinates")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("geoCoordinates")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<int?>("Initial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("initial");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<short?>("IsWheelChairAccessible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("isWheelChairAccessible")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Label")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("label")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Nickname")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nickname")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("phone")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Tags")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tags")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("VideoDeviceName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("videoDeviceName")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Generate")
                        .HasName("PK_room_google__generate");

                    b.ToTable("room_google", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomMergeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("MergeRoomId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("merge_room_id");

                    b.Property<string>("RoomId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("room_id");

                    b.HasKey("Id")
                        .HasName("PK_room_merge_detail_id");

                    b.ToTable("room_merge_detail", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.RoomUserCheckin", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted")
                        .HasAnnotation("Relational:JsonPropertyName", "is_deleted");

                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("key")
                        .HasAnnotation("Relational:JsonPropertyName", "key");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("name")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id")
                        .HasName("PK_room_user_checkin_id");

                    b.ToTable("room_user_checkin", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SendingEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("batch");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int>("ErrorSending")
                        .HasColumnType("int")
                        .HasColumnName("error_sending");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pending")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pending");

                    b.Property<int>("Success")
                        .HasColumnType("int")
                        .HasColumnName("success");

                    b.Property<int?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_sending_email_id");

                    b.ToTable("sending_email", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SendingNotif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("batch");

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<int>("ErrorSending")
                        .HasColumnType("int")
                        .HasColumnName("error_sending");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_status")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Pending")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pending");

                    b.Property<int>("Success")
                        .HasColumnType("int")
                        .HasColumnName("success");

                    b.Property<int?>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("PK_sending_notif_id");

                    b.ToTable("sending_notif", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SendingTextStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Text")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("text")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_sending_text_status_id");

                    b.ToTable("sending_text_status", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Session", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(449)
                        .HasColumnType("nvarchar(449)")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset?>("AbsoluteExpiration")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("AbsoluteExpiration");

                    b.Property<DateTimeOffset>("ExpiresAtTime")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("ExpiresAtTime");

                    b.Property<long?>("SlidingExpirationInSeconds")
                        .HasColumnType("bigint")
                        .HasColumnName("SlidingExpirationInSeconds");

                    b.Property<byte[]>("Value")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id")
                        .HasName("PK__sessions___3213E83F112681DD");

                    b.ToTable("sessions", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingEmailTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AttendanceNoText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("attendance_no_text");

                    b.Property<string>("AttendanceText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("attendance_text");

                    b.Property<string>("CloseText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("close_text");

                    b.Property<string>("ContentText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_text");

                    b.Property<string>("DateText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("date_text");

                    b.Property<string>("DetailLocation")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("detail_location");

                    b.Property<string>("FootText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("foot_text");

                    b.Property<string>("GreetingText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("greeting_text");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enabled");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link");

                    b.Property<string>("MapLinkText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Direction map")
                        .HasColumnName("map_link_text");

                    b.Property<string>("Room")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("room");

                    b.Property<string>("SupportText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("support_text");

                    b.Property<string>("TitleAgendaText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("title_agenda_text");

                    b.Property<string>("TitleOfText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("title_of_text");

                    b.Property<string>("ToText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("to_text");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK_setting_email_template_id");

                    b.ToTable("setting_email_template", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingInvoiceConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AmountBillText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("amount_bill_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("AmountText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("amount_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ContentText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content_text");

                    b.Property<string>("DateFormat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("date_format")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DateText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("date_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("DescriptionText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Footer2Text")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("footer2_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Footer3Text")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("footer3_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("FooterText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("footer_text");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoInvText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("no_inv_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("NoProfitText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("no_profit_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("TaxAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tax_amount")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TaxText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tax_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("ToText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("to_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("TotalText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("total_text")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpText")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("up_text")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_setting_invoice_config_id");

                    b.ToTable("setting_invoice_config", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingInvoiceText", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasDefaultValue("")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("s")
                        .HasColumnName("created_by");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_deleted")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue(" s")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK_setting_invoice_text_id");

                    b.ToTable("setting_invoice_text", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingLogConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Text")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("text")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_setting_log_config_id");

                    b.ToTable("setting_log_config", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingPantryConfig", b =>
                {
                    b.Property<long?>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("BeforeOrderMeeting")
                        .HasColumnType("int")
                        .HasColumnName("before_order_meeting");

                    b.Property<int>("MaxOrderQty")
                        .HasColumnType("int")
                        .HasColumnName("max_order_qty");

                    b.Property<int>("PantryExpired")
                        .HasColumnType("int")
                        .HasColumnName("pantry_expired");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK_setting_pantry_config_id");

                    b.ToTable("setting_pantry_config", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingRuleBooking", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("ConfigAdvanceBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(7)
                        .HasColumnName("config_advance_booking");

                    b.Property<int?>("ConfigAdvanceCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnName("config_advance_checkin");

                    b.Property<string>("ConfigApprovalUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_approval_user");

                    b.Property<int?>("ConfigMaxDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(240)
                        .HasColumnName("config_max_duration");

                    b.Property<int?>("ConfigMinDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(15)
                        .HasColumnName("config_min_duration");

                    b.Property<int?>("ConfigParticipantCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("config_participant_checkin_count");

                    b.Property<string>("ConfigPermissionCheckin")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("pic")
                        .HasColumnName("config_permission_checkin");

                    b.Property<string>("ConfigPermissionEnd")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("pic")
                        .HasColumnName("config_permission_end");

                    b.Property<string>("ConfigPermissionUser")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("config_permission_user");

                    b.Property<int?>("ConfigReleaseRoomCheckinTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("config_release_room_checkin_timeout");

                    b.Property<string>("ConfigRoomForUsage")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("config_room_for_usage");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("duration");

                    b.Property<int?>("EndEarlyMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("end_early_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("ExtendCountTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("extend_count_time");

                    b.Property<int?>("ExtendMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30)
                        .HasColumnName("extend_meeting");

                    b.Property<int?>("ExtendMeetingMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(60)
                        .HasColumnName("extend_meeting_max");

                    b.Property<int?>("ExtendMeetingNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("extend_meeting_notification");

                    b.Property<int>("IfUnusedRoom")
                        .HasColumnType("int")
                        .HasColumnName("if_unused_room");

                    b.Property<int?>("IsConfigSettingEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_config_setting_enable");

                    b.Property<int?>("IsEnableApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_approval");

                    b.Property<int?>("IsEnableCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_checkin");

                    b.Property<int?>("IsEnableCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_checkin_count");

                    b.Property<int?>("IsEnablePermission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_permission");

                    b.Property<int?>("IsEnableRecurring")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enable_recurring");

                    b.Property<int?>("IsRealeaseCheckinTimeout")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_realease_checkin_timeout");

                    b.Property<int?>("LimitTimeBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("limit_time_booking");

                    b.Property<int?>("MaxDisplayDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("max_display_duration")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("MaxEndMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("max_end_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("NotifUnuseBeforeMeeting")
                        .HasColumnType("int")
                        .HasColumnName("notif_unuse_before_meeting");

                    b.Property<int?>("NotifUnusedMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notif_unused_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<short?>("RoomPin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("room_pin")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("RoomPinNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("room_pin_number")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<TimeOnly?>("RoomPinRefresh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasColumnName("room_pin_refresh")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("UnuseCancelFee")
                        .HasColumnType("int")
                        .HasColumnName("unuse_cancel_fee");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id");

                    b.ToTable("setting_rule_booking", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingRuleDeskbooking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ConfigAdvanceBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(7)
                        .HasColumnName("config_advance_booking");

                    b.Property<int?>("ConfigAdvanceCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(7)
                        .HasColumnName("config_advance_checkin");

                    b.Property<int?>("ConfigEnableCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("config_enable_checkin");

                    b.Property<int?>("ConfigMaxDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(240)
                        .HasColumnName("config_max_duration");

                    b.Property<int?>("ConfigMinDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(15)
                        .HasColumnName("config_min_duration");

                    b.Property<int?>("ConfigParticipantCheckinCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("config_participant_checkin_count");

                    b.Property<int?>("ConfigPermissionCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("config_permission_checkin");

                    b.Property<int?>("ConfigPermissionEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("config_permission_end");

                    b.Property<int?>("ConfigReleaseRoomCheckinEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("config_release_room_checkin_enable");

                    b.Property<int?>("ConfigReleaseRoomCheckinTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("config_release_room_checkin_time");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("duration");

                    b.Property<int?>("EndEarlyMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("end_early_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("ExtendCountTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("extend_count_time");

                    b.Property<int?>("ExtendMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30)
                        .HasColumnName("extend_meeting");

                    b.Property<int?>("ExtendMeetingMax")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(60)
                        .HasColumnName("extend_meeting_max");

                    b.Property<int?>("ExtendMeetingNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("extend_meeting_notification");

                    b.Property<int?>("IfUnusedRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("if_unused_room");

                    b.Property<int?>("IsConfigCheckinEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_config_checkin_enable");

                    b.Property<int?>("IsConfigSettingEnable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_config_setting_enable");

                    b.Property<int?>("LimitTimeBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("limit_time_booking");

                    b.Property<int?>("MaxDisplayDuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("max_display_duration")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("MaxEndMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("max_end_meeting")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("NotifUnuseBeforeMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("notif_unuse_before_meeting");

                    b.Property<int?>("NotifUnusedMeeting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("notif_unused_meeting");

                    b.Property<int?>("UnuseCancelFee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("unuse_cancel_fee")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_setting_rule_deskbooking_id");

                    b.ToTable("setting_rule_deskbooking", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.SettingSmtp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("host");

                    b.Property<short>("IsDeleted")
                        .HasColumnType("smallint")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_enabled");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<int>("Port")
                        .HasColumnType("int")
                        .HasColumnName("port");

                    b.Property<short>("Secure")
                        .HasColumnType("smallint")
                        .HasColumnName("secure");

                    b.Property<int?>("SelectedEmail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("selected_email");

                    b.Property<string>("TitleEmail")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title_email")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("user");

                    b.HasKey("Id")
                        .HasName("PK_setting_smtp_id");

                    b.ToTable("setting_smtp", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.TimeAmMeeting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<int?>("Day")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("day");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("desc");

                    b.Property<int?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_deleted");

                    b.Property<int?>("IsDisactivated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_disactivated");

                    b.Property<int?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PK_time_am_meeting_id");

                    b.ToTable("time_am_meeting", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.TimeSchedule15", b =>
                {
                    b.Property<int>("Timeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("timeid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Timeid"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("time");

                    b.HasKey("Timeid")
                        .HasName("PK_time_schedule_15_timeid");

                    b.ToTable("time_schedule_15", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.TimeSchedule30", b =>
                {
                    b.Property<int>("Timeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("timeid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Timeid"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("time");

                    b.HasKey("Timeid")
                        .HasName("PK_time_schedule_30_timeid");

                    b.ToTable("time_schedule_30", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.TimeSchedule60", b =>
                {
                    b.Property<int>("Timeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("timeid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Timeid"));

                    b.Property<int>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("time");

                    b.HasKey("Timeid")
                        .HasName("PK_time_schedule_60_timeid");

                    b.ToTable("time_schedule_60", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("1")
                        .HasColumnName("access_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("created_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("employee_id");

                    b.Property<int?>("IsApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_approval");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int")
                        .HasColumnName("is_deleted");

                    b.Property<int>("IsDisactived")
                        .HasColumnType("int")
                        .HasColumnName("is_disactived");

                    b.Property<int>("IsProtected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_protected")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("IsVip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("is_vip");

                    b.Property<int>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("level_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("RealPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("real_password");

                    b.Property<string>("SecureQr")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnName("secure_qr");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("UpdatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("updated_by")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("username");

                    b.Property<int?>("VipApproveBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_approve_bypass");

                    b.Property<int?>("VipLimitCapBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_limit_cap_bypass");

                    b.Property<int?>("VipShiftedBypass")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("vip_shifted_bypass");

                    b.HasKey("Id")
                        .HasName("PK_user_id");

                    b.ToTable("user", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.UserAccess", b =>
                {
                    b.Property<int>("AccessId")
                        .HasColumnType("int")
                        .HasColumnName("access_id");

                    b.Property<string>("AccessName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("access_name")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("is_active")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("AccessId")
                        .HasName("PK_user_access_access_id");

                    b.ToTable("user_access", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.UserConfig", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("DefaultPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("default_password");

                    b.Property<int>("PasswordLength")
                        .HasColumnType("int")
                        .HasColumnName("password_length");

                    b.HasKey("Id")
                        .HasName("PK_user_config_id");

                    b.ToTable("user_config", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.VariableTimeDuration", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("time")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_variable_time_duration_id");

                    b.ToTable("variable_time_duration", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.VariableTimeExtend", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<int?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("time")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("Id")
                        .HasName("PK_variable_time_extend_id");

                    b.ToTable("variable_time_extend", "smart_meeting_room");
                });

            modelBuilder.Entity("_7.Entities.Models.Department", b =>
                {
                    b.HasOne("_7.Entities.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("IdPerusahaan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_department_company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryMenuPaket", b =>
                {
                    b.HasOne("_7.Entities.Models.Pantry", "Pantry")
                        .WithMany()
                        .HasForeignKey("PantryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_pantry_package");

                    b.Navigation("Pantry");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryMenuPaketD", b =>
                {
                    b.HasOne("_7.Entities.Models.PantryDetail", "PantryDetail")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_pantry_menu_detail");

                    b.HasOne("_7.Entities.Models.PantryMenuPaket", "Package")
                        .WithMany("PackageD")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_pantry_packageD");

                    b.Navigation("Package");

                    b.Navigation("PantryDetail");
                });

            modelBuilder.Entity("_7.Entities.Models.PantryMenuPaket", b =>
                {
                    b.Navigation("PackageD");
                });
#pragma warning restore 612, 618
        }
    }
}
