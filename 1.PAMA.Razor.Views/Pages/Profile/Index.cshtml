@page "/profile"
@model _1.PAMA.Razor.Views.Pages.Profile.IndexModel
@{
    Layout = "_LayoutAdmin";
    ViewData["PageName"] = "Profile";
}

@section Styles {
    <link href="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/css/dataTables.bootstrap.css" rel="stylesheet">
    <link href="~/assets/theme/plugins/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet">
    <link href="~/assets/external/daterangepicker/daterangepicker.css" rel="stylesheet" />
}
<section class="content">

         <div class="container-fluid">

            <div class="block-header">
                <h2>PROFILE</h2>
            </div>
            <div class="row clearfix">
                <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
                    <div class="card">
                        <div class="header">
                            <div class="row clearfix">
                                <div class="col-xs-12 col-sm-6">
                                    <h2>User Profile </h2>
                                </div>
                                <div class="col-xs-12 col-sm-6 align-right">
                                   </div> 
                            </div>
                        </div>
                        <div class="body">
                          <form id="frm_create">
                                        <label for="">Name*</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                <input type="text" autocomplete="off" name="name" required=""  class="form-control" placeholder="Name" id="profile_name">
                                            </div>
                                        </div>
                                        <label for="">NPK*</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                <input type="text" autocomplete="off" name="nik_display" required=""  class="form-control" placeholder="NPK" id="profile_nik_display" >
                                            </div>
                                        </div>
                                        <label for="">Email</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                 <input type="text" autocomplete="off" name="email"  class="form-control" placeholder="Email" id="profile_email">
                                            </div>
                                        </div>
                                        <label for="">No Phone</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                 <input type="text" autocomplete="off" name="no_phone"  class="form-control" placeholder="No Phone" id="profile_no_phone" >
                                            </div>
                                        </div>
                                        <label for="">No Extension</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                 <input type="text" autocomplete="off" name="no_ext"   class="form-control" placeholder="No Extension" id="profile_no_ext">
                                            </div>
                                        </div>
                                        <label for="">Gender</label>
                                        <div class="form-group">
                                <select class="form-control" name="gender" id="profile_gender">
                                                <option value="male">Male</option>
                                                <option value="female">Female</option>
                                        	</select>
                                            
                                        </div>
                                        <label for="">Birth Date</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                 <input id="id_birth_date" type="text" autocomplete="off" name="birth_date"  class="form-control" placeholder="Birth Date" id="profile_birth_date" >
                                            </div>
                                        </div>
                                        <label for="">Card  Number</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                            	 <input type="text" autocomplete="off" name="card_number" class="form-control" placeholder="Card number" id="profile_card_number" >
                                               
                                            </div>
                                        </div>
                                        <label for="">Address</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                            	<textarea name="address" rows="4" class="form-control" id="profile_address">
                                            	</textarea>
                                               
                                            </div>
                                        </div>
                                        <br>
                                        <button type="submit" class="btn btn-primary m-t-15 waves-effect">S A V E</button>
                                    </form>
                                </div>
                        </div>
                    </div>
                    <!-- end profile -->
                    <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6">
	                    <div class="card">
	                        <div class="header">
	                            <div class="row clearfix">
	                                <div class="col-xs-12 col-sm-6">
	                                    <h2>User Form </h2>
	                                </div>
	                            </div>
	                        </div>
	                        <div class="body">
	                        	 <form id="frm_username">
                                    <label for="">Username*</label>
                                    <div class="form-group">
                                    	<div class="input-group">
                                            <div class="form-line">
                                                <input id="id_username" type="text" autocomplete="off" name="username" required=""  class="form-control" placeholder="Username">
                                            </div>
                                            <span class="input-group-addon">
                                            	
                                            </span>
                                        </div>
                                    </div>
                                    <label for="">Grup Access </label>
                                    <h4 class="font-bold col-red" id="group_user"></h4>
                                   
                                    <button type="submit" class="btn btn-primary m-t-15 waves-effect">S A V E</button>
                                </form>
	                        </div>
	                    </div>
	                    <!-- card -->
	                    <div class="card">
	                        <div class="header">
	                            <div class="row clearfix">
	                                <div class="col-xs-12 col-sm-6">
	                                    <h2>Change Password </h2>
	                                </div>
	                            </div>
	                        </div>
	                        <div class="body">
	                        	 <form id="frm_password">
                                    <label for="">Old Password*</label>
                                    <div class="form-group">
                                    	<div class="input-group">
                                            <div class="form-line">
                                                <input id="id_old_pass" type="password" autocomplete="off" name="old_pass" required=""  class="form-control" placeholder="Old Password"  >
                                            </div>
                                            <span class="input-group-addon">
                                            	<button  onclick="onLock('id_old_pass', $(this))"  type="button" class="btn btn-sm btn-default waves-effect">
				                                    <i class="material-icons">lock_outline</i>
				                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <label for="">New Password*</label>
                                    <div class="form-group">
                                    	<div class="input-group">
                                            <div class="form-line">
                                                <input id="id_new_pass" type="password" autocomplete="off" name="new_pass" required=""  class="form-control" placeholder="New Password"  >
                                            </div>
                                            <span class="input-group-addon">
                                            	<button  onclick="onLock('id_new_pass', $(this))"  type="button" class="btn btn-sm btn-default waves-effect">
				                                    <i class="material-icons">lock_outline</i>
				                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <label for="">Confirm Password*</label>
                                    <div class="form-group">
                                    	<div class="input-group">
                                            <div class="form-line">
                                                <input id="id_con_pass" type="password" autocomplete="off" name="con_pass" required=""  class="form-control" placeholder="Confirm Password"  >
                                            </div>
                                            <span class="input-group-addon">
                                            	<button onclick="onLock('id_con_pass', $(this))" type="button" class="btn btn-sm btn-default waves-effect">
				                                    <i class="material-icons">lock_outline</i>
				                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary m-t-15 waves-effect">S A V E</button>
                                </form>
	                        </div>
	                    </div>
	                </div>
                </div>
            </div>

        </div>
    </section>

@section Scripts {
    <script src="~/assets/theme/plugins/jquery-datatable/jquery.dataTables.js"></script>
    <script src="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
    <script src="~/assets/theme/plugins/sweatalert2/sweetalert2.all.min.js"></script>
    <!-- Moment Plugin Js -->
    <script src="~/assets/theme/plugins/momentjs/moment.js"></script>
    <!-- Bootstrap Material Datetime Picker Plugin Js -->
    <script src="~/assets/theme/plugins/jquery-editable/src/table-edits.js"></script>
    <script src="~/assets/external/daterangepicker/daterangepicker.js"></script>
    <script>
        @* var authToken = "@Model.AuthToken"; *@
        var baseUrl = "@Model.BaseUrl"

        var id = "";
        var userId = 0;

        $(function () {
            initStartDate()
            getProfile();
            getUserData();
            // $('.datepicker').datepicker();
        })
        function onLock(id, t) {
            // t.find("i .material-icons");
            var selector = $('#' + id);

            if (selector.attr('type') == "password") {
                selector.attr('type', "text");
                t.find(".material-icons").html("lock_open")
            } else {
                t.find(".material-icons").html("lock_outline")
                selector.attr('type', "password");

            }
        }

        function initTable(selector) {
            selector.DataTable();
        }

        function clearTable(selector) {
            selector.DataTable().destroy();
        }
        function select_enable() {
            $('select').selectpicker("refresh");
            $('select').selectpicker("initialize");
        }
        function enable_datetimepicker() {
            $('.timepicker').bootstrapMaterialDatePicker({
                format: 'HH:mm',
                clearButton: true,
                date: false
            });
        }
        function initStartDate() {
            $('#id_birth_date').daterangepicker({
                "singleDatePicker": true,
                "showDropdowns": true,
                "showWeekNumbers": true,
                "showISOWeekNumbers": true,
                "opens": "center",
                "startDate": moment().subtract(29, 'days').format('MM/DD/YYYY'),
                "endDate": moment().format('MM/DD/YYYY'),
                "autoApply": true,
                "alwaysShowCalendars": true,
            }, function (start, end, label) {
                // init();
            });
        }


    function getProfile() {
        $.ajax({
            url: baseUrl + `@Model.GetProfile`,
            type: "GET",
            dataType: "json",
            beforeSend: function (XMLHttpRequest) {
                // startLoader();
            },
            success: function (data) {
                var col = data.collection;
                if (data.status == "fail") {
                    stopLoader()
                    swalShowNotification('alert-danger', data.msg, 'bottom', 'left')
                } else if (data.status == "success") {

                    var col = data.collection;
                    if (data.status == "fail") {

                    } else if (data.status == "success") {
                        $("#profile_name").val(col.name);
                        $("#profile_nik_display").val(col.nik_display);
                        $("#profile_email").val(col.email);
                        $("#profile_no_phone").val(col.no_phone);
                        $("#profile_no_ext").val(col.no_ext);
                        $("#profile_birth_date").val(col.birth_date);
                        $("#profile_card_number").val(col.card_number);
                        $("#profile_gender").val(col.gender).change();
                        $("#profile_address").val(col.address);
                        $("#id_birth_date").val(col.birth_date);

                        id = col.id;
                    }
                }
            },
            error: errorAjax,

        })
        }

        function getUserData() {
            $.ajax({
                url: baseUrl + `@Model.GetAuthUser`,
                type: "GET",
                dataType: "json",
                beforeSend: function (XMLHttpRequest) {
                    // startLoader();
                },
                success: function (data) {
                    var col = data.collection;
                    if (data.status == "fail") {
                        stopLoader()
                        swalShowNotification('alert-danger', data.msg, 'bottom', 'left')
                    } else if (data.status == "success") {

                        var col = data.collection;
                        if (data.status == "fail") {

                        } else if (data.status == "success") {
                            $("#id_username").val(col.username);
                            getLevels(col.level_id);
                            userId = col.id;
                        }
                    }
                },
                error: errorAjax,

            })
        }

        function getLevels(levelId = 0) {
            $.ajax({
                url: baseUrl + `@Model.GetLevels`,
                type: "GET",
                dataType: "json",
                beforeSend: function (XMLHttpRequest) {
                    // startLoader();
                },
                success: function (data) {
                    var col = data.collection;
                    if (data.status == "fail") {
                        stopLoader()
                        swalShowNotification('alert-danger', data.msg, 'bottom', 'left')
                    } else if (data.status == "success") {

                        var col = data.collection;
                        if (data.status == "fail") {

                        } else if (data.status == "success") {
                            var level = col.find(el => el.id === levelId);
                            if (level) {
                                $("#group_user").html(level.name);
                            } else {
                                console.error("Level ID not found");
                            }
                        }
                    }
                },
                error: errorAjax,

            })
        }

        $('#frm_create').submit(function (e) {
            e.preventDefault();
            var form = $('#frm_create').serialize();
            var bs = $('#id_baseurl').val();
            $.ajax({

                url: baseUrl + `@Model.UpdateEmployee/` + id,
                type: "POST",
                dataType: "json",
                data: form,
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    if (data.status == "success") {
                        Swal("Update Info", data.msg, 'success');

                        showNotification('alert-success', data.msg, 'top', 'center')
                    } else {
                        Swal("Update Info", data.msg, 'warning');
                        showNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })
        $('#frm_username').submit(function (e) {
            e.preventDefault();

            if (typeof userId === "undefined" || userId === null || userId === "") {
                console.error("Error: userId is not defined!");
                return;
            }

            var form = $('#frm_username').serialize();

            $.ajax({
                url: baseUrl + `@Model.UpdateUsername/` + userId,
                type: "POST",
                dataType: "json",
                data: form,
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    $('#id_loader').html('');

                    if (data.status == "success") {
                        
                        showNotification(data.status == "success" ? 'alert-success' : 'alert-danger', "Success Update username. You will be redirected to login ", 'top', 'center');

                        setTimeout(function () {
                            window.location.href = "/logout";
                        }, 3000); // Redirects after 3 second
                    } else{
                        Swal.fire("Update Info", data.msg, data.status == "success" ? "success" : "warning");;
                    }


                },
                error: errorAjax
            });
        })
        $('#frm_password').submit(function (e) {
            e.preventDefault();
            var form = $('#frm_password').serialize();
            var bs = $('#id_baseurl').val();
            var op = $('#id_old_pass').val();
            var np = $('#id_new_pass').val();
            var cp = $('#id_con_pass').val();
            var check = true;
            if (op == np) {
                Swal.fire("Attention!!!", "The new and old passwords are the same!", "warning")
                check = false;
                return false;
            }
            if (np != cp) {
                check = false;
                Swal.fire("Attention!!!", "Confirm passwords are not the same!", "warning")
                return false;
            }
            if (check == true) {
                $.ajax({
                    url: baseUrl + `@Model.UpdatePassword/` + userId,
                    type: "POST",
                    dataType: "json",
                    data: form,
                    beforeSend: function () {
                        $('#id_loader').html('<div class="linePreloader"></div>');
                    },
                    success: function (data) {
                        if (data.status == "success") {
                            Swal("Update Info", data.msg, 'success');
                            showNotification('alert-success', data.msg, 'top', 'center')
                            window.location.reload();
                        } else {
                            Swal("Update Info", data.msg, 'warning');
                            showNotification('alert-danger', data.msg, 'top', 'center')
                        }

                        $('#id_loader').html('');
                    },
                    error: errorAjax
                })
            }

        })


        function errorAjax(xhr, ajaxOptions, thrownError) {
            $('#id_loader').html('');
            if (ajaxOptions == "parsererror") {
                var msg = "Status Code 500, Error Server bad parsing";
                showNotification('alert-danger', msg, 'bottom', 'left')
            } else {
                var msg = "Status Code " + xhr.status + " Please check your connection !!!";
                showNotification('alert-danger', msg, 'bottom', 'left')
            }
        }

    </script>
}