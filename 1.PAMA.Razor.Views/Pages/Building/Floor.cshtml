@page "/building/floor"
@model _1.PAMA.Razor.Views.Pages.Building.FloorModel
@{
    Layout = "_LayoutAdmin";
    ViewData["PageName"] = "Building";
    ViewData["PageName2"] = "Floor";
}

@section Styles
{
    <link href="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/css/dataTables.bootstrap.css" rel="stylesheet">
    <link href="~/assets/theme/plugins/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet" />
    <link href="~/assets/external/dropify/css/dropify.min.css" rel="stylesheet">
    <!-- JQuery Nestable Css -->
    <link href="~/assets/theme/plugins/nestable/jquery-nestable.css" rel="stylesheet">
    <style>
        .mediacard{
            padding: 10px;
            border-radius: 5px;
            transition: 0.3s;
            border: 2px solid transparent;
        }
        .mediacard:hover{
            background-color: #f7f7f7;
            /*border: 2px solid #bf104b !important;*/
            cursor: pointer;
        }
        /*.media:hover{
            background-color: #f4ecec;
            border: 2px solid #bf104b !important;
        }*/
        .media{
            padding: 10px;
            border-radius: 5px;
            transition: 0.3s;
            border: 2px solid transparent;

        }
        .media, .media-body{
            overflow: visible;
        }
        .label-bordered {
            border: 1px solid #333 !important;
            color : #333 !important;
            border-radius: 4px;
        }
        .selectedRoom{
            border:2px solid blue;
        }

        .media-text-thumbnail {
            color: #999;
            
        }
        .media-text-thumbnail td{
            /*display: block;
            font-size: 12px;
            margin-top: 5px;
            line-height: 15px;*/
        }
        .dd-item-this{
            cursor: pointer;
        }
        .dd-handle{
            background: transparent !important;
        }
        .dd3-handle2{
            position: absolute;
            margin: 0;
            left: 0;
            top: 0;
            color:#fd6868;
            cursor: move;
            width: 36px;
            text-indent: 100%;
            white-space: nowrap;
            overflow: hidden;
            border: 0px solid #aaa;
            background: transparent;
        }
        .dd3-handle2:before {
            content : '::' !important;
            background-color: transparent;
            border: 0px;
            display: block;
            position: absolute;
            left: 0;
            top: 3px;
            width: 100%;
            text-align: center;
            text-indent: 0;
            color: #fd6868;
            font-size: 20px;
            font-weight: normal;
        }
        .dd3-content{
            background-color: transparent;
            border: 0px;
            font-size: 17px;
        }

        .iconAction {
            background-color:transparent;
            border:1px solid transparent;    
            height:32px;
            font-size: 22px;
            border-radius:50%;
            z-index: 10;
            -moz-border-radius:50%;
            -webkit-border-radius:50%;
            line-height: 1.4;
            width:32px;
            padding-left: 6px;
            margin-top: -6px;

        }
        .iconAction:hover {
            background-color:#eeeeee !important;
            cursor: pointer;
        }
        .footer {
            height: auto;
            position: fixed;
            left: 45vw;
            bottom: 30px;
            width: 40vw;
            /*background-color: red;*/
            color: black;
            text-align: center;
            display: none;
        }
        .activeclick{
            background-color:#fef;
            transition: color 2s;
        }
        .uploadImage{

        }
        .btn-breadcrumb{
            box-shadow:none !important;
        }
        .btn-dropdownbreadcrumb{
            background-color: transparent !important;
        }
    </style>
}

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <h2>
                @ViewData["PageName"]
                <ol class="breadcrumb">
                    <li><a href="<?= base_url()?>building">@ViewData["PageName"]</a></li>
                    <li class="active">
                        <div class="btn-group btn-breadcrumb">
                                <button type="button" class="btn btn-dropdownbreadcrumb  dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @ViewData["PageName2"] <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu">
                                    @foreach (var item in Model.BuildingList)
                                    {
                                        <li><a href="@($"{Model.AppUrl}building/floor?building={item.Encrypt}")" class=" waves-effect waves-block">@item.Name</a></li>
                                    }
                                </ul>
                            </div>
                    </li>
                </ol>
            </h2>
        </div>
        <div class="row clearfix">
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                <div class="card mediacard">
                    <div class="header">
                        <h2 id="b_title1">
                            Title
                            <input type="hidden" id="b_id" value="">
                        </h2>
                        <ul class="header-dropdown m-r--5">
                            <li class="dropdown">
                                <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                    <i class="material-icons">more_vert</i>
                                </a>
                                <ul class="dropdown-menu pull-right">
                                    <li>
                                        @* <a id="b_editaction" onclick="editData($(this))" data-id="${item.id}" data-id="${item.name}" type="button">Edit/Detail</a> *@
                                        <a id="b_editaction" onclick="editData($(this))" data-id="${item.enc_id}" data-id="${item.name}" type="button">Edit/Detail</a>
                                    </li>
                                    <li> 
                                        @* <a id="b_deleteaction" onclick="removeData($(this))" data-id="${item.id}" data-id="${item.name}" type="button">Delete</a> *@
                                        <a id="b_deleteaction" onclick="removeData($(this))" data-id="${item.enc_id}" data-id="${item.name}" type="button">Delete</a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                    <div class="media">
                        <div class="media-left media-middle">
                            <a href="javascript:void(0);">
                                @* <img class="media-object" src="http://localhost/demobooking/file/room/420759.jpeg" width="125" height="125"> *@
                                <img class="media-object" id="b_image" src="" width="125" height="125">
                            </a>
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">
                                <a tabindex="0" data-trigger="focus" data-html="true" style="padding:2px 12px !important;" id="b_title2">Title</a>
                            </h4>
                            <div class="row clearfix">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <table class="table borderless table-borderless ">
                                        <tr class="media-text-thumbnail">
                                            <td style="padding:2px 12px !important; border:0px; ">
                                                <i class="material-icons" style="" data-toggle="tooltip" data-placement="top" title="" data-original-title="Location">access_time</i>
                                            </td>
                                            <td style="padding:2px 12px !important; border:0px; " id="b_timezone"></td>
                                        </tr>
                                        <tr class="media-text-thumbnail">
                                            <td style="padding:2px 12px !important; border:0px; ">
                                                <i class="material-icons" style="" data-toggle="tooltip" data-placement="top" title="" data-original-title="People/Attendees Capacity">place</i>
                                            </td>
                                            <td style="padding:2px !important; border:0px; "><a href="" id="b_google">Google Location</a></td>
                                        </tr>
                                        <tr class="media-text-thumbnail">
                                            <td style="padding:2px 12px !important; border:0px; ">
                                                <i class="material-icons" style="" data-toggle="tooltip" data-placement="top" title="" data-original-title="People/Attendees Capacity">streetview</i>
                                            </td>
                                            <td style="padding:2px !important; border:0px; "><small id="b_address"></small></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-3">
                <div class="card">
                    <div class="body" style="height: 500px; overflow-y:scroll;">
                        <button onclick="createData($(this))" type="button" class="btn btn-primary waves-effect ">CREATE NEW</button>
                        <br>
                        <hr>
                        <div class="dd">
                            <ol class="dd-list" id="ddlist">
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-8 col-sm-8 col-md-8 col-lg-9">
                <div id="stageCanvas"></div>
                <div id="uploadImage">
                    <form id="frm_upload">
                        <input type="file" name="image" id="upload_new" class="dropify" data-height="120" data-max-file-size="10M" accept="image/*" />
                        @* <input type="hidden" name="<?= $this->security->get_csrf_token_name(); ?>" value="<?= $this->security->get_csrf_hash(); ?>"> *@
                    </form>
                </div>
                <div class="footer">
                    <div class="row clearfix">
                        <div class="col-xs-8 align-left">
                            <button type="button" onclick="onClickUpdateUpload()" class="btn btn-lg btn-primary waves-effect"><b>Change Map</b></button>
                            <form id="frm_upload_update">
                                <input type="file" name="image" id="updateImageFloor" style="display:none;">
                                @* <input type="hidden" name="<?= $this->security->get_csrf_token_name(); ?>" value="<?= $this->security->get_csrf_hash(); ?>"> *@
                            </form>
                            &nbsp;
                            &nbsp;
                        </div>
                        <div class="col-xs-4 align-right">
                            <div class="btn-group" role="group" aria-label="First group">
                                <button type="button" onclick="fitZoomScale()" class="btn btn-lg btn-default waves-effect">Fit</button>
                                <button style="padding: 8.8px 12px;" type="button" onclick="zoomOut()" class="btn btn-default waves-effect"><i class="material-icons">remove</i></button>
                                <button style="padding: 8.8px 12px;" type="button" onclick="zoomIn()" class="btn btn-default waves-effect"><i class="material-icons">add</i></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- # START MODAL CREATE  -->
<div class="modal fade" id="id_mdl_create" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="idmdlcrLabel">Create Floor </h4>
            </div>
            <div class="modal-body " id="id_mdl_create_body">
                <form id="frm_create">
                    <label for="">Name <b style="color:red;">*</b></label>
                    <div class="form-group">
                        <div class="form-line">
                            <input type="text" autocomplete="off" name="name" id="id_crt_name" required="" class="form-control" placeholder="Name">
                            @* <input type="hidden" name="<?= $this->security->get_csrf_token_name(); ?>" value="<?= $this->security->get_csrf_hash(); ?>"> *@
                        </div>
                    </div>
                    <button type="submit" style="display: none;" id="id_btn_crt_submit" class="btn btn-primary m-t-15 waves-effect">Save</button>
                </form>
            </div>
            <div class="modal-footer">
                <div class="row clearfix">
                    <div class="col-xs-6 align-left">
                        <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button>
                    </div>
                    <div class="col-xs-6">
                        <button onclick="clickSubmit('id_btn_crt_submit')" type="button" class="btn btn-primary waves-effect ">SAVE</button>
                    </div>
                </div>
                <!-- <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button> -->
            </div>
        </div>
    </div>
</div>
<!-- # END MODAL CREATE  -->
<!-- # START MODAL CREATE  -->
<div class="modal fade" id="id_mdl_update" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="idmdlcrLabel">Update Floor </h4>
            </div>
            <div class="modal-body ">
                <form id="frm_update">
                    <label for="">Name <b style="color:red;">*</b></label>
                    <div class="form-group">
                        <div class="form-line">
                            <input type="text" autocomplete="off" name="name" id="id_edt_name" required="" class="form-control" placeholder="Name">
                            <input type="hidden" autocomplete="off" name="id" id="id_edt_id" required="" class="form-control">
                            @* <input type="hidden" name="<?= $this->security->get_csrf_token_name(); ?>" value="<?= $this->security->get_csrf_hash(); ?>"> *@
                        </div>
                    </div>
                    <button type="submit" style="display: none;" id="id_btn_edt_submit" class="btn btn-primary m-t-15 waves-effect">Save</button>
                </form>
            </div>
            <div class="modal-footer">
                <div class="row clearfix">
                    <div class="col-xs-6 align-left">
                        <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button>
                    </div>
                    <div class="col-xs-6">
                        <button onclick="clickSubmit('id_btn_edt_submit')" type="button" class="btn btn-primary waves-effect ">SAVE</button>
                    </div>
                </div>
                <!-- <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button> -->
            </div>
        </div>
    </div>
</div>
<!-- # END MODAL CREATE  -->

@* <textarea id="id_modules" style="display: none;">{}</textarea>
<input type="hidden" id="id_baseurl" value="<?= base_url()?>">
<textarea id="id_building_json" style="display: none;"><?= $building?></textarea> *@

<textarea id="id_modules" style="display: none;">{}</textarea>
<input type="hidden" id="id_baseurl" value="@Model.ApiUrl">
<textarea id="id_building_json" style="display: none;">@Html.Raw(Model.Building)</textarea>

@section Scripts
{
    <script>
        const ajax = {
            url : {
                get_building_floors : "@Model.GetBuildingFloors",
                get_show_building_floor : "@Model.GetShowBuildingFloor",
                post_create_building_floor : "@Model.CreateBuildingFloor",
                post_update_building_floor : "@Model.UpdateBuildingFloor",
                post_delete_building_floor : "@Model.DeleteBuildingFloor",
                post_upload_building_floor : "@Model.UploadBuildingFloor"
            }
        }
    </script>
    <script src="~/assets/theme/plugins/jquery-datatable/jquery.dataTables.js"></script>
    <script src="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
    <script src="~/assets/theme/plugins/sweatalert2/sweetalert2.all.min.js"></script>
    <!-- Moment Plugin Js -->
    <script src="~/assets/theme/plugins/momentjs/moment.js"></script>
    <script src="~/assets/external/dropify/js/dropify.min.js"></script>
    <!-- Bootstrap Material Datetime Picker Plugin Js -->
    <script src="~/assets/theme/plugins/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker.js"></script>
    <script src="~/assets/external/numeral/numeral.min.js"></script>
    <!-- <script src="~/assets/external/numeral/locale.id.js"></script> -->
    <!-- Input Mask Plugin Js -->
    <script src="~/assets/theme/plugins/jquery-inputmask/jquery.inputmask.bundle.js"></script>
    <!-- Jquery Nestable -->
    <script src="~/assets/theme/plugins/nestable/jquery.nestable.js"></script>
    <!-- Jquery Konva -->
    <script src="~/assets/external/konva.min.js"></script>
    <!-- <script src="~/assets/process/beacon/beacon.floor.js"></script> -->
    <script type="text/javascript">
        $('.block-header').show();

        @* var csrf_name = '<?= $this->security->get_csrf_token_name(); ?>';
        var csrf_token = '<?= $this->security->get_csrf_hash(); ?>'; *@
        var csrf_name = "";
        var csrf_token = "";
        var gBuilding = JSON.parse($('#id_building_json').val());
        var buildingId = "";

        // console.log(gBuilding)
        var gFloor = [];
        var selectedFloor;
        var selectedFloorIndex;
        var initialtime = 0;
        $(function() {
            genBuilding();
            initFloor();
            initDrop();
            // console.log($('#stageCanvas').width())

        })

        function initDrop() {
            var drDestroy = $('.dropify').dropify();
            drDestroy = drDestroy.data('dropify')
            // drDestroy.isDropified()
            drDestroy.destroy();
            drDestroy.init();
        }

        $('.dd').nestable();
        $('.dd').on('change', function() {
            var $this = $(this);
            var raw = JSON.stringify($($this).nestable('serialize'));
            var sortnest = JSON.parse(raw);
            var col = []
            for (var m in sortnest) {
                var sm = sortnest[m];
                for (var x in gFloor) {
                    var i = gFloor[x];
                    // console.log(i.id);
                    @* if (sm.floorid == i.id) { *@
                    if (sm.floorid == i.enc_id) {
                        if (selectedFloorIndex == m) {
                            selectedFloorIndex = col.length;
                        }
                        col.push(i);
                        break;
                    }
                }
            }
            for (var k in col) {
                @* if (col[k].id == selectedFloor.id) { *@
                if (col[k].enc_id == selectedFloor.enc_id) {
                    selectedFloorIndex = k;
                }
            }
            gFloor = col;
            var html = ``;
            $.each(gFloor, function(index, item) {
                var css = ''
                if (index == 0 && initialtime == 0) {
                    selectedFloor = item;
                    selectedFloorIndex = index;
                    css = 'activeclick';
                } else if (initialtime != 0 && selectedFloorIndex == index) {
                    selectedFloor = item;
                    selectedFloorIndex = index;
                    css = 'activeclick';
                }
                @* html += `<li onclick="clickFloor($(this))" data-name="${item.name}" data-floorid="${item.id}" data-index="${index}" option class="dd-item dd-item-this ${css}" data-id="${item.position}"><div class="dd-handle dd3-handle2"></div><div class="dd3-content">${item.name} <span class="pull-right"><i class="material-icons iconAction">border_color</i> <i class="material-icons iconAction">delete</i> </span></div></li>` *@
                html += `<li onclick="clickFloor($(this))" data-name="${item.name}" data-floorid="${item.enc_id}" data-index="${index}" option class="dd-item dd-item-this ${css}" data-id="${item.position}"><div class="dd-handle dd3-handle2"></div><div class="dd3-content">${item.name} <span class="pull-right"><i class="material-icons iconAction">border_color</i> <i class="material-icons iconAction">delete</i> </span></div></li>`
            })
            $('#ddlist').html(html);
            console.log(selectedFloorIndex, col);
            // $this.parents('div.body').find('textarea').val(serializedData);
        });

        function genBuilding() {
            @* buildingId = gBuilding.id; *@
            buildingId = gBuilding.encrypt;
            $('#b_title1').html(gBuilding.name)
            $('#b_image').attr("src", gBuilding.image)
            $('#b_title2').html(gBuilding.name)
            $('#b_timezone').html(gBuilding.timezone)
            $('#b_address').html(gBuilding.detail_address)
            $('#b_google').attr('href', gBuilding.google_map)
            $('#b_address').html(gBuilding.detail_address)
            @* $('#b_editaction').data('id', gBuilding.id) *@
            $('#b_editaction').data('id', gBuilding.enc_id)
            $('#b_editaction').data('name', gBuilding.name)
            @* $('#b_deleteaction').data('id', gBuilding.id) *@
            $('#b_deleteaction').data('id', gBuilding.enc_id)
            $('#b_deleteaction').data('name', gBuilding.name)
        }

        function createData() {
            // initCrtDrop();
            $('#id_mdl_create').modal('show');
            select_enable()
        }

        function clickSubmit(id) {
            $('#' + id).click();
        }

        function clickFloor(t) {
            var id = t.data('floorid');
            var index = t.data('index');
            selectedFloor = gFloor[index]
            selectedFloorIndex = index;
            $('.dd-item-this').removeClass("activeclick");
            t.addClass("activeclick");
            initialFloorStage();
        }


        function updateData(t) {
            var index = t.data('index');
            var floorid = t.data('floorid');
            var bs = $('#id_baseurl').val();
            @* var u = bs + `building/floor/get/data/update`; *@
            var u = bs + ajax.url.get_show_building_floor;
            $.ajax({
                url: u,
                type: "POST",
                dataType: "json",
                data: {
                    building: buildingId,
                    floor: floorid,
                    csrf_name:csrf_token,
                },
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        var html = '';
                        $('#id_edt_name').val(data.collection.name);
                        @* $('#id_edt_id').val(data.collection.id); *@
                        $('#id_edt_id').val(data.collection.enc_id);
                        $('#id_mdl_update').modal('show');


                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            });
        }

        function removeData(t) {
            var index = t.data('index');
            var floorid = t.data('floorid');
            var name = t.data('name');
            var bs = $('#id_baseurl').val();
            @* var u = bs + `building/floor/post/delete`; *@
            var u = bs + ajax.url.post_delete_building_floor;

            Swal.fire({
                title: 'Are you sure you want delete it',
                text: "You will lose the data floor " + name + " !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete !',
                cancelButtonText: 'Cancel !',
                reverseButtons: true,
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: u,
                        type: "POST",
                        dataType: "json",
                        data: {
                            csrf_name:csrf_token,
                            id: floorid,
                        },
                        beforeSend: function() {
                            $('#id_loader').html('<div class="linePreloader"></div>');
                        },
                        success: function(data) {
                            if (data.status == "success") {
                                initFloor()
                            swalShowNotification('alert-success', data.msg, 'top', 'center')
                            } else {
                                swalShowNotification('alert-danger', data.msg, 'top', 'center')
                            }
                            $('#id_loader').html('');
                        },
                        error: errorAjax
                    });

                }
                return false;
            });
        }

        function initFloor() {
            var bs = $('#id_baseurl').val();
            $.ajax({
                @* url: bs + "building/floor/get/data?building=" + buildingId, *@
                url: bs + ajax.url.get_building_floors + `?building=${buildingId}`,
                type: "GET",
                dataType: "json",
                cache: false,
                processData: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        var html = '';
                        gFloor = data.collection;

                        $.each(data.collection, function(index, item) {
                            var css = ''

                            if (index == 0 && initialtime == 0) {
                                selectedFloor = item;
                                selectedFloorIndex = index;
                                css = 'activeclick';
                            } else if (initialtime != 0 && selectedFloorIndex == index) {
                                selectedFloor = item;
                                selectedFloorIndex = index;
                                css = 'activeclick';
                            }
                            @* html += `<li data-name="${item.name}" data-floorid="${item.id}" data-index="${index}" option class="dd-item dd-item-this ${css}" data-id="${item.position}"><div class="dd-handle dd3-handle2"></div><div class="dd3-content" onclick="clickFloor($(this))" data-name="${item.name}" data-floorid="${item.id}" data-index="${index}" >${item.name} <span class="pull-right"><i data-index="${index}" data-floorid="${item.id}" onclick="updateData($(this))" class="material-icons iconAction">border_color</i> <i class="material-icons iconAction"  data-index="${index}" data-floorid="${item.id}" onclick="removeData($(this))">delete</i> </span></div></li>` *@
                            html += `<li data-name="${item.name}" data-floorid="${item.enc_id}" data-index="${index}" option class="dd-item dd-item-this ${css}" data-id="${item.position}"><div class="dd-handle dd3-handle2"></div><div class="dd3-content" onclick="clickFloor($(this))" data-name="${item.name}" data-floorid="${item.enc_id}" data-index="${index}" >${item.name} <span class="pull-right"><i data-index="${index}" data-floorid="${item.enc_id}" onclick="updateData($(this))" class="material-icons iconAction">border_color</i> <i class="material-icons iconAction"  data-index="${index}" data-floorid="${item.enc_id}" onclick="removeData($(this))">delete</i> </span></div></li>`
                        })
                        $('#ddlist').html(html)
                        if(selectedFloor == null){

                        }else{
                            if (selectedFloor != null && initialtime == 0) {
                                initialtime++;
                                initialFloorStage();
                            } else {
                                initialFloorStage();
                            }
                        }
                        
                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            });
        }
        $('#upload_new').on('change', function(e) {
            if ($(this)[0].files.length > 0) {

                $('#frm_upload').submit();
            }
        })
        $('#frm_upload').submit(function(e) {
            // console.log(2)
            e.preventDefault();
            @* var id = selectedFloor.id; *@
            var id = selectedFloor.enc_id;
            var form = new FormData(this);
            form.append('id', id);
            var bs = $('#id_baseurl').val();
            $.ajax({
                @* url: bs + "building/floor/post/upload", *@
                url: bs + ajax.url.post_upload_building_floor,
                type: "POST",
                dataType: "json",
                data: form,
                contentType: false,
                cache: false,
                processData: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        $('#frm_upload')[0].reset();
                        initFloor();

                        // $('#id_mdl_create').modal('hide');
                        swalShowNotification('alert-success', data.msg, 'top', 'center')
                        initDrop()
                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })

        $('#frm_create').submit(function(e) {
            e.preventDefault();
            // gFacility = data.collection
            var form = new FormData(this);
            form.append('building_id', buildingId);
            var bs = $('#id_baseurl').val();
            $.ajax({
                @* url: bs + "building/floor/post/create", *@
                url: bs + ajax.url.post_create_building_floor,
                type: "POST",
                dataType: "json",
                data: form,
                contentType: false,
                cache: false,
                processData: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        $('#frm_create')[0].reset();
                        initFloor();

                        $('#id_mdl_create').modal('hide');
                        swalShowNotification('alert-success', data.msg, 'top', 'center')
                        initDrop()
                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })
        $('#frm_update').submit(function(e) {
            e.preventDefault();
            // gFacility = data.collection
            var form = new FormData(this);
            form.append('building_id', buildingId);
            var bs = $('#id_baseurl').val();
            $.ajax({
                @* url: bs + "building/floor/post/update", *@
                url: bs + ajax.url.post_update_building_floor,
                type: "POST",
                dataType: "json",
                data: form,
                contentType: false,
                cache: false,
                processData: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        $('#frm_update')[0].reset();
                        initFloor();

                        $('#id_mdl_update').modal('hide');
                        swalShowNotification('alert-success', data.msg, 'top', 'center')
                        initDrop()
                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })

        function errorAjax(xhr, ajaxOptions, thrownError) {
            $('#id_loader').html('');
            if (ajaxOptions == "parsererror") {
                var msg = "Status Code 500, Error Server bad parsing";
                showNotification('alert-danger', msg, 'bottom', 'left')
            } else {
                var msg = "Status Code " + xhr.status + " Please check your connection !!!";
                showNotification('alert-danger', msg, 'bottom', 'left')
            }
        }
    </script>
    <script type="text/javascript">
        @* var imageSourcePath = $('#id_baseurl').val() + "assets/file/floor/"; *@
        var imageSourcePath = "";
        var imageSource = imageSource + "";
        var exampleimap = $('#id_baseurl').val() + "/assets/file/beaconfloor/20230222100446_floor_509.jpeg";
        var pathfloorfile_2 = $('#id_baseurl').val() + "/assets/file/beaconfloor/";

        var Gwidth = $('#stageCanvas').width();
        var Gheight = 480;
        var stageCanvas;
        var mainLayer;
        var mapPosX = 0
        var mapPosY = 0
        var objectPaddingTop = 120
        var objectPaddingLeft = 50
        var circleCenter;
        var scaleBy = 1.01;
        var scaleZoom = 1.5;
        var initialStagePos;
        var initialStageScale;
        var mainContainer
        var mainMapImage;

        function onClickUpdateUpload() {
            $('#updateImageFloor').click();
        }


        $('#updateImageFloor').on('change', function(e) {
            e.preventDefault();
            console.log($(this)[0].files.length)
            if ($(this)[0].files.length > 0) {
                $('#frm_upload_update').submit()
            }
            // console.log(123)

        })
        $('#frm_upload_update').submit(function(e) {
            // console.log(2)
            e.preventDefault();
            @* var id = selectedFloor.id; *@
            var id = selectedFloor.enc_id;
            var form = new FormData(this);
            form.append('id', id);
            var bs = $('#id_baseurl').val();
            $.ajax({
                @* url: bs + "building/floor/post/upload", *@
                url: bs + ajax.url.post_upload_building_floor,
                type: "POST",
                dataType: "json",
                data: form,
                contentType: false,
                cache: false,
                processData: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function(data) {
                    if (data.status == "success") {
                        $('#frm_upload')[0].reset();
                        initFloor();

                        // $('#id_mdl_create').modal('hide');
                        swalShowNotification('alert-success', data.msg, 'top', 'center')
                        initDrop()
                    } else {
                        swalShowNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })

        function initialFloorStage() {
            var fimage = selectedFloor.image ?? "";
            if (stageCanvas != null) {
                stageCanvas.destroy();
                stageCanvas = null;
            }
            imageSource = imageSourcePath + selectedFloor.image;

            // console.log(selectedFloor)
            if (fimage == "") {
                console.log('no image')
                $('.footer').hide();
                $('#stageCanvas').hide();
                $('#uploadImage').show();
                return;
            }
            $('#uploadImage').hide();
            $('#stageCanvas').show();
            $('.footer').show();



            initialStage();
            initialMainLayer()
            setTimeout(function() {
                initMapImage()
            }, 500);
        }

        function initialStage() {
            Gwidth = $('#stageCanvas').width();
            stageCanvas = new Konva.Stage({
                container: 'stageCanvas',
                width: Gwidth,
                height: Gheight,
            });
            mainContainer = stageCanvas.container();

            mainContainer.focus();
            mainContainer.tabIndex = 1;
            // focus it
            // also stage will be in focus on its click
            mainContainer.focus();
            mapPosX = (stageCanvas.getWidth() * 0.10);
            mapPosY = (stageCanvas.getHeight() * 0.10);
            initialStagePos = stageCanvas.position();
            initialStageScale = stageCanvas.scaleX();
            mainContainer.addEventListener('keydown', function(e) {
                e.preventDefault();
                if (e.keyCode == 32) {
                    document.body.style.cursor = 'pointer';
                    // console.log("a")
                    mainMapImage.draggable(true)
                    // console.log(mainMapImage.draggable())

                }
                // if (e.keyCode === 37) {
                //     circle.x(circle.x() - DELTA);
                // } else if (e.keyCode === 38) {
                //     circle.y(circle.y() - DELTA);
                // } else if (e.keyCode === 39) {
                //     circle.x(circle.x() + DELTA);
                // } else if (e.keyCode === 40) {
                //     circle.y(circle.y() + DELTA);
                // } else {
                //     return;
                // }
            });
            mainContainer.addEventListener('keyup', function(e) {
                e.preventDefault();
                // console.log(e.keyCode, "keyup")
                document.body.style.cursor = 'default';
                if (e.keyCode == 32) {
                    if (mainMapImage != null) {
                        mainMapImage.draggable(false)
                        // console.log(mainMapImage.draggable())

                    }
                }
            })

            stageCanvas.on('wheel', (e) => {
                e.evt.preventDefault();
                var oldScale = stageCanvas.scaleX();
                var pointer = stageCanvas.getPointerPosition();
                var mousePointTo = {
                    x: (circleCenter.x() - stageCanvas.x()) / oldScale,
                    y: (circleCenter.y() - stageCanvas.y()) / oldScale,
                };
                let direction = e.evt.deltaY > 0 ? 1 : -1;
                if (e.evt.ctrlKey) {
                    direction = -direction;
                }
                var newScale = direction > 0 ? oldScale * scaleBy : oldScale / scaleBy;
                stageCanvas.scale({ x: newScale, y: newScale });
                var newPos = {
                    x: circleCenter.x() - mousePointTo.x * newScale,
                    y: circleCenter.y() - mousePointTo.y * newScale,
                };
                stageCanvas.position(newPos);
            });
        }

        function zoomIn() {
            var oldScale = stageCanvas.scaleX();
            var mousePointTo = {
                x: (circleCenter.x() - stageCanvas.x()) / oldScale,
                y: (circleCenter.y() - stageCanvas.y()) / oldScale,
            };
            var newScale = oldScale * scaleZoom;
            stageCanvas.scale({ x: newScale, y: newScale });
            var newPos = {
                x: circleCenter.x() - mousePointTo.x * newScale,
                y: circleCenter.y() - mousePointTo.y * newScale,
            };
            stageCanvas.position(newPos);
        }

        function zoomOut() {
            var oldScale = stageCanvas.scaleX();
            var mousePointTo = {
                x: (circleCenter.x() - stageCanvas.x()) / oldScale,
                y: (circleCenter.y() - stageCanvas.y()) / oldScale,
            };
            var newScale = oldScale / scaleZoom;
            stageCanvas.scale({ x: newScale, y: newScale });
            var newPos = {
                x: circleCenter.x() - mousePointTo.x * newScale,
                y: circleCenter.y() - mousePointTo.y * newScale,
            };
            stageCanvas.position(newPos);
        }

        function fitZoomScale() {
            stageCanvas.position(initialStagePos);
            stageCanvas.scale({ x: initialStageScale, y: initialStageScale });
        }

        function initialMainLayer() {
            mainLayer = new Konva.Layer();
            stageCanvas.add(mainLayer);
            circleCenter = new Konva.Circle({
                x: stageCanvas.width() / 2,
                y: stageCanvas.height() / 2,
                radius: 10,
                fill: 'transparent',
            });
            mainLayer.add(circleCenter);
            mainLayer.draw();

            // console.log(mapPosX,mapPosY,  stageCanvas.getWidth())
        }

        function reloadMap() {
            initMapImage()

        }



        // var drawLayer = new Konva.Layer();

        // stageCanvas.add(drawLayer);
        // console.log(stageCanvas.getWidth())
        // console.log(mapimageH,mapimageW)

        function initMapImage(imageSRCC = "") {
            console.log(imageSource)
            if (imageSRCC == "") {
                imageSRCC = imageSource;
            }
            var _imgsrc = imageSRCC;

            var imgObj = new Image();
            // console.log(stage.getWidth() / 2)
            mainMapImage = new Konva.Image({
                x: mapPosX,
                y: mapPosY,
                width: stageCanvas.getWidth(),
                // height: mapimageW,
                stroke: 'red',
                strokeWidth: 0,
                draggable: false,
            });
            mainLayer.add(mainMapImage);
            imgObj.src = _imgsrc;
            imgObj.onload = function() {
                mainMapImage.image(imgObj); // give the image to the cannvas image object.
                var padding = 0;
                var w = imgObj.width;
                var h = imgObj.height;
                var targetW = stageCanvas.getWidth() - (2 * padding);
                var targetH = stageCanvas.getHeight() - (2 * padding);
                var widthFit = targetW / w;
                var heightFit = targetH / h;
                var scale = (widthFit > heightFit) ? heightFit : widthFit;
                w = parseInt(w * scale, 10);
                h = parseInt(h * scale, 10);
                mainMapImage.size({
                    width: w - objectPaddingLeft,
                    height: h - objectPaddingTop,
                });
                centreRectShape(mainMapImage);
                mainLayer.draw(); // My favourite thing to forget.

                // My favourite thing to forget.

            }
        }

        function centreRectShape(shape) {
            shape.x((stageCanvas.getWidth() - shape.getWidth()) / 2) + objectPaddingLeft;
            shape.y((stageCanvas.getHeight() - shape.getHeight()) / 2) + objectPaddingTop;
        }

        function makeid(length) {
            let result = '';
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            const charactersLength = characters.length;
            let counter = 0;
            while (counter < length) {
                result += characters.charAt(Math.floor(Math.random() * charactersLength));
                counter += 1;
            }
            return result;
        }
        // $('#stageCanvas').css("border", "1px solid #000");
    </script>
}