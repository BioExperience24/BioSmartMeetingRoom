@page "/Pantry-transaction"
@model _1.PAMA.Razor.Views.Pages.PantryTransaction.IndexModel
@{
    Layout = "_LayoutAdmin";
    ViewData["PageName"] = "Order Management";
}

@section Styles {
    <link href="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/css/dataTables.bootstrap.css" rel="stylesheet">
    <link href="~/assets/theme/plugins/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css" rel="stylesheet">
    <link href="~/assets/external/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <style>
        .swal-wide {
            width:950px !important;
        }
    </style>
}

<section class="content">
    <div class="container-fluid">
        <div class="block-header">
            <h2>@ViewData["PageName"]</h2>
        </div>
        <div class="row clearfix">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="card">
                    <div class="body">
                        <ul class="nav nav-tabs tab-nav-right" role="tablist">
                            <li onclick="changeTabs('roomusage')" role="presentation" class="active"><a href="#roomusage" data-toggle="tab">TRANSACTION</a></li>
                            @* <li onclick="changeTabs('organizer')" role="presentation"><a href="#organizer" data-toggle="tab">ORDER USER</a></li> *@
                        </ul>
@*                         <div class="tab-content">
                            <div role="tabpanel" class="tab-pane fade  in active" id="roomusage">
                                @await Html.PartialAsync("PantryTransaction/pantry/ViewTransaction")
                            </div>
                            <div role="tabpanel" class="tab-pane fade " id="organizer">
                                di sono nya msh error
                                <?php $this->load->view("Admin/Report/room/view_organizer.php", array('pagename'=>$pagename));?>
                            </div>
                            <div role="tabpanel" class="tab-pane fade" id="attendees">
                                di sono nya msh error
                                <?php $this->load->view("Admin/Report/room/view_attendees.php", array('pagename'=>$pagename));?>
                            </div>
                            <div role="tabpanel" class="tab-pane fade" id="settings">
                            </div>
                        </div> *@
                        <br>
                        <br>
                        <br>
                        <div class="row clearfix">
                            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                                <div class="input-group">
                                    <span class="input-group-addon">
                                        <i class="material-icons">date_range</i>
                                    </span>
                                    <div class="form-line">
                                        <input id="daterangepicker" type="text" class="form-control ">
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <select name="prefix_id" id="id_pantry_data" class="form-control show-tick"></select>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <select name="prefix_id" id="id_pantry_transaction_status" class="form-control show-tick"></select>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
                                <button class="btn btn-primary" onclick="onFilter()"> Search </button>
                                <button class="btn btn-success" onclick="newOrder()" id="btn_new_order_snack"> New Order </button>
                            </div>
                        </div>
                        <!-- row clearfix -->
                        <div class="row clearfix">
                            <div class="table-responsive responsive">
                                <table class="table table-hover" id="tbldata">
                                    <thead>
                                    <th style="width: 20px">#</th>
                                    <th style="">Order ID</th>
                                    <th style="">Order Time</th>
                                    <th style="">Order By</th>
                                    <th style="">Booking Title</th>
                                    <th style="">Room</th>
                                    <th style="">Order Status</th>
                                    <th style="">Expired Time</th>
                                    <th style=""></th>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>
                        <!-- row clearfix -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<div class="modal fade" id="id_mdl_create" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="idmdlcrLabel">Create Facility</h4>
            </div>
            <div class="modal-body " id="id_mdl_create_body">
                <form id="frm_create">
                    <label for="">Name</label>
                    <div class="form-group">
                        <div class="form-line">
                            <input type="text" autocomplete="off" name="name" id="id_crt_name" required="" class="form-control" placeholder="Facility Name">
                        </div>
                    </div>

                    <br>
                    <button type="submit" style="display: none;" id="id_btn_type_crt_submit" class="btn btn-primary m-t-15 waves-effect">Submit</button>
                </form>
            </div>
            <div class="modal-footer">
                <div class="row clearfix">
                    <div class="col-xs-6 align-left">
                        <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button>
                    </div>
                    <div class="col-xs-6 align-right">
                        <button onclick="clickSubmit('id_btn_type_crt_submit')" type="button" class="btn btn-primary waves-effect ">SAVE</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="id_mdl_new_order" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="idmdlcrLabel">New Order</h4>
            </div>
            <div class="modal-body " id="id_mdl_new_order_body">
                <form id="frm_new_order">
                    <div class="col-12">
                        <label for="">Meeting List</label>
                        <div class="form-group">
                            <div class="form-line">
                                <select class="form-control" id="id_new_order_meeting_list" name="booking_id" data-live-search="true">
                                    <option value="">Load Data...</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <label for="">Package List</label>
                        <div class="form-group">
                            <div class="form-line">
                                <select class="form-control" id="id_new_order_package_list" name="meeting_category" data-live-search="true">
                                    <option value="">Load Data...</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <label for="">Package Menu</label>
                        <table class="table" id="tbl_package_menu">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Description</th>
                                    <th scope="col">Note</th>
                                    <th scope="col" class="text-center" width="100">Qty</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="row clearfix">
                    <div class="col-xs-6 align-left">
                        <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">CLOSE</button>
                    </div>
                    <div class="col-xs-6 align-right">
                        <button onclick="createNewOrder()" type="button" class="btn btn-primary waves-effect ">CREATE</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<textarea id="id_pantry" style="display: none;"></textarea>
<input type="hidden" id="id_baseurl" value="@Model.BaseWeb">
<input type="hidden" id="id_baseurlapi" value="@Model.BaseUrl">

@section Scripts {
    <script src="~/assets/theme/plugins/jquery-datatable/jquery.dataTables.js"></script>
    <script src="~/assets/theme/plugins/jquery-datatable/skin/bootstrap/js/dataTables.bootstrap.js"></script>
    <script src="~/assets/theme/plugins/sweatalert2/sweetalert2.all.min.js"></script>
    <!-- MODAL CREATE -->
    <script src="~/assets/theme/plugins/momentjs/moment.js"></script>
    <script src="~/assets/theme/plugins/momentjs/moment-timezone.js"></script>
    <script src="~/assets/theme/plugins/momentjs/moment-timezone-data.min.js"></script>
    <script src="~/assets/theme/plugins/jquery-editable/src/table-edits.js"></script>
    <script src="~/assets/external/daterangepicker/daterangepicker.js"></script>
    <script src="~/assets/external/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>

    <script>
        var localtimezone = moment.tz.guess();
        var gPantry = JSON.parse($('#id_pantry').val());
        var gPantry = [
            { id: 0, value: "Order not yet processed" },
            { id: 1, value: "Order processed" },
            { id: 2, value: "Order Delivered" },
            { id: 3, value: "Order Completed" },
            { id: 4, value: "Order canceled" },
            { id: 4, value: "Order rejected" },
        ];
        var gPantry = [];
        var pantryPackagesCollection;
        var pantryPackageDetailCollection;
        var meetingListCollection;
        var ttlAttendees = 0;
    </script>

    <script>
        $(function () {
            initPantry();
            initPantryTransactionStatus();
            enable_datetimepicker()
            init();
            getPantryPackages();
            checkHeadEmployeeAuthUser();
        })

        function checkHeadEmployeeAuthUser() {
            if (app.auth.level == "2") {
                if (app.auth.head_employee != "") {
                    $('#btn_new_order_snack').show();
                } else {
                    $('#btn_new_order_snack').hide();
                }
            }
        }

        function clickSubmit(id) {
            $('#' + id).click();
        }
        var gAutomation = [];
        function initTable(selector) {
            selector.DataTable();
        }
        function clearTable(selector) {
            selector.DataTable().destroy();
        }
        function select_enable() {
            $('select').selectpicker("refresh");
            $('select').selectpicker("initialize");
        }
        function enable_datetimepicker() {
            $('.input-group #daterangepicker').daterangepicker({
                "locale": {
                    format: "YYYY-MM-DD"
                },
                "showWeekNumbers": true,
                "showISOWeekNumbers": true,
                "opens": "center",
                "drops": "down",
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                "alwaysShowCalendars": true,
            }, function (start, end, label) {
                // console.log(start.format('YYYY-MM-DD'),end.format('YYYY-MM-DD'))
                // init(start.format('YYYY-MM-DD'),end.format('YYYY-MM-DD'))

                // console.log('New date range selected: ' + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD') + ' (predefined range: ' + label + ')');
            });

        }
        function onFilter() {
            var date = $('#daterangepicker').val();
            var sp = date.split(" - ");
            var st = sp[0].trim();
            var en = sp[1].trim();
            // console.log(st,en)
            init(st, en)
        }
        function createData() {
            $('#id_mdl_create').modal('show');

            enable_datetimepicker()
            select_enable()

        }
        $('#frm_create').submit(function (e) {
            e.preventDefault();
            var form = $('#frm_create').serialize();
            var bs = $('#id_baseurl').val();
            $.ajax({
                url: bs + "facility/post/create",
                type: "POST",
                dataType: "json",
                data: form,
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    if (data.status == "success") {
                        $('#frm_create')[0].reset();
                        init();
                        $('#id_mdl_create').modal('hide');
                        showNotification('alert-success', data.msg, 'top', 'center')
                    } else {
                        showNotification('alert-danger', data.msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        })

        function init(start = "", end = "") {
            var bs = $('#id_baseurlapi').val();
            var pantry = $('#id_pantry_data').val();
            var transcStat = $('#id_pantry_transaction_status').val();
            $.ajax({
                url: bs + "@Model.GetAll",
                type: "GET",
                data: {
                    start: start,
                    end: end,
                    pantryId: pantry,
                    orderSt: transcStat
                },
                dataType: "json",
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    if (data.status == "success") {
                        clearTable($('#tbldata'));
                        var html = "";
                        var num = 0;
                        $.each(data.collection, function (index, item) {
                            num++;
                            var status_order = item.order_status;
                            var expired = "";
                            let btnCancel = `
                                <button type="button" class="btn btn-danger waves-effect" onclick="processToCancel($(this))">Cancel Order</button>
                            `;

                            if (item.order_st == 0) {
                                var dateexpired = moment(item.expired_at).unix();
                                var nowtime = moment().unix();
                                if (nowtime > dateexpired) {
                                    status_order = "Order expired";
                                    expired = moment(item.expired_at).format("DD MMM YYYY hh:mm A");
                                    btnCancel = '';
                                }
                            } else{
                                expired = moment(item.expired_at).format("DD MMM YYYY hh:mm A");
                                btnCancel = '';
                            }
                            var orderTime = moment(item.order_datetime).format("DD MMM YYYY hh:mm A");

                            let bookDate = `${moment(item.date_booking).format("DD MMM YYYY")} ${moment(item.booking_start).format("HH:mm")} - ${moment(item.booking_end).format("HH:mm")}`;

                            html += '<tr data-id="' + item.id + '" data-name="' + item.title + '">';
                            html += '<td>' + num + '</td>';
                            html += `<td>
                                <a data-toggle="tooltip" data-placement="top" title="Order Id" data-html="true" data-id="${item.id}" onclick="openDetail($(this))" style="cursor:pointer;font-size:16px;font-weight:bold;">
                                    ${item.id}
                                </a>
                            </td>`;
                            html += '<td>' + orderTime + '</td>';
                            html += '<td>' + ((item.employee_name == null) ? "" : item.employee_name) + '</td>';
                            html += '<td>' + ((item.title == null) ? "" : item.title) + '<br><small><b>('+bookDate+')</b></small></td>';
                            html += '<td>' + ((item.room_name == null) ? "" : item.room_name) + '</td>';
                            html += '<td>' + status_order + '</td>';
                            html += '<td>' + expired + '</td>';
                            html += '<td>' + btnCancel +'</td>';
                            html += '</tr>';
                        })
                        $('#tbldata tbody').html(html);
                        initTable($('#tbldata'));
                    } else {
                        var msg = "Your session is expired, login again !!!";
                        showNotification('alert-danger', msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        }
        function initPantry() {
            var bs = $('#id_baseurlapi').val();
            $.ajax({
                url: bs + "@Model.GetAllPantry",
                type: "GET",

                dataType: "json",
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    if (data.status == "success") {
                        // clearTable($('#tbldata'));
                        var html = "";
                        var num = 0;
                        gPantry = data.collection;
                        html += '<option value="" >All Pantry</option>';
                        $.each(data.collection, function (index, item) {
                            html += '<option value="' + item.id + '" >' + item.name + '</option>';
                        });
                        $('#id_pantry_data').html(html);
                        select_enable()
                    } else {
                        var msg = "Your session is expired, login again !!!";
                        showNotification('alert-danger', msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        }

        function initPantryTransactionStatus() {
            var bs = $('#id_baseurlapi').val();
            $.ajax({
                url: bs + "@Model.GetAllTransaksiStatus",
                type: "GET",

                dataType: "json",
                beforeSend: function () {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                },
                success: function (data) {
                    if (data.status == "success") {
                        var html = "";
                        var num = 0;
                        gPantry = data.collection;
                        html += '<option value="" >All Transaction Status</option>';
                        $.each(data.collection, function (index, item) {
                            html += '<option value="' + item.id + '" >' + item.name + '</option>';
                        });
                        $('#id_pantry_transaction_status').html(html);
                        select_enable()
                    } else {
                        var msg = "Your session is expired, login again !!!";
                        showNotification('alert-danger', msg, 'top', 'center')
                    }
                    $('#id_loader').html('');
                },
                error: errorAjax
            })
        }


        function removeData(t) {
            var id = t.data('id');
            var name = t.data('name');
            var form = new FormData();
            form.append('id', id);
            form.append('name', name);
            Swal.fire({
                title: 'Are you sure you want delete it?',
                text: "You will lose the data facility " + name + " !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete !',
                cancelButtonText: 'Cancel !',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    var bs = $('#id_baseurl').val();
                    $.ajax({
                        url: bs + "facility/post/delete",
                        type: "POST",
                        data: form,
                        processData: false,
                        contentType: false,
                        dataType: "json",
                        beforeSend: function () {
                            $('#id_loader').html('<div class="linePreloader"></div>');
                        },
                        success: function (data) {
                            $('#id_loader').html('');
                            if (data.status == "success") {
                                showNotification('alert-success', "Succes deleted facility " + name, 'top', 'center')
                                init();
                            } else {
                                showNotification('alert-danger', "Data not found", 'bottom', 'left')
                            }
                        },
                        error: errorAjax,
                    })
                }
                else {

                }
            })

        }

        function errorAjax(xhr, ajaxOptions, thrownError) {
            $('#id_loader').html('');
            if (ajaxOptions == "parsererror") {
                var msg = "Status Code 500, Error Server bad parsing";
                showNotification('alert-danger', msg, 'bottom', 'left')
            } else {
                var msg = "Status Code " + xhr.status + " Please check your connection !!!";
                showNotification('alert-danger', msg, 'bottom', 'left')
            }
        }

        function processToCancel(t) {
            let bs = $('#id_baseurlapi').val();
            let row = t.parents("tr");
            let id = row.data("id");
            let name = row.data("name");
            console.log(id);
            
            Swal.fire({
                title: 'Are you sure want cancel order?',
                text: "You will cancel the data order " + id + " !",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Cancel Order !',
                cancelButtonText: 'Close !',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    Swal.fire({
                        title: 'Reason for Cancelation',
                        input: "text",
                        inputAttributes: {
                            autocapitalize: "off",
                        },
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Submit',
                        cancelButtonText: 'Close !',
                        reverseButtons: true,
                        preConfirm: (result) => {
                            if (result == "" || result == null) {
                                return Swal.showValidationMessage(`Reason for Cancelation is required`);
                            }
                        }
                    }).then((result) => {
                        if (result.value !== undefined) {
                            var form = new FormData();
                            form.append('id', id);
                            form.append('note', result.value);
                            $.ajax({
                                url: bs + "@Model.ProcessCancelOrder",
                                type: "POST",
                                data: form,
                                processData: false,
                                contentType: false,
                                dataType: "json",
                                beforeSend: function() {
                                    $('#id_loader').html('<div class="linePreloader"></div>');
                                    Swal.fire({
                                        title: 'Please Wait !',
                                        html: 'Process to cancel order',
                                        allowOutsideClick: false,
                                        onBeforeOpen: () => {
                                            Swal.showLoading()
                                        },
                                    });
                                },
                                success: function(data) {
                                    Swal.close();
                                    $('#id_loader').html('');
                                    if (data.status == "success") {
                                        showNotification('alert-success', "Succes cancel order", 'top', 'center')
                                        init();
                                    } else {
                                        showNotification('alert-danger', "Reject order is failed!!!", 'bottom', 'left')
                                    }
                                },
                                complete: function() {
                                    $('#id_loader').html('');
                                },
                                error: errorAjax,
                            });
                        }
                    });
                }
            });
        }
    
        
        $('#id_mdl_new_order').on('hidden.bs.modal', function (e) {
            ttlAttendees = 0;
            pantryPackageDetailCollection = [];
            genPantryDetail();

            $(':input','#frm_new_order')
                .not(':button, :submit, :reset, :hidden')
                .val('')
                .prop('checked', false)
                .prop('selected', false);

            $("#id_new_order_package_list").val("");
            
            select_enable();
        });

        async function newOrder() {
            await getInProgressMeetingList();

            $('#id_mdl_new_order').modal({
                backdrop: 'static',
                keyboard: false
            });
        }
        
        async function getPantryPackages() {
            let bs = $('#id_baseurlapi').val();
            try {
                var data = await $.ajax({
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: bs + "@Model.PantryPackages",
                });

                if (data.status == "success")
                {
                    pantryPackagesCollection =  data.collection;

                    initPackageList();
                } else {
                    var msg = "Your session is expired, login again !!!";
                    showNotification('alert-danger', msg, 'top', 'center');
                }
            } catch (err) {
                // console.log(err);
                errorAjax;
            }
        }

        function initPackageList() {
            $("#id_new_order_package_list").empty();
            $("#id_new_order_package_list").append("<option>Select Package</option>");

            $.each(pantryPackagesCollection, function (_, item) { 
                let opt = document.createElement("option");

                $(opt).text(`${item.name}`);
                $(opt).val(item.id);

                $("#id_new_order_package_list").append(opt);
            });
            select_enable();
        }

        $("#id_new_order_package_list").on("change", function () {
            const t = $(this);
            getPantryPackageDetail(t.val());
        });

        async function getPantryPackageDetail(pantryPackageId) {
            let bs = $('#id_baseurlapi').val();
            try {
                var data = await $.ajax({
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: bs + "@Model.PantryPackageDetailById" + pantryPackageId
                });

                if (data.status == "success")
                {
                    let collection  = data.collection
                    let detail = [];

                    $.each(collection.detail, function (_, item) { 
                        detail.push({
                            id: item.id,
                            pantry_id: item.pantry_id,
                            name: item.name,
                            note: "",
                            description: item.description,
                            qty: ttlAttendees ?? 0,
                        });
                    });

                    pantryPackageDetailCollection =  detail;

                    genPantryDetail();
                    
                } else {
                    var msg = "Your session is expired, login again !!!";
                    showNotification('alert-danger', msg, 'top', 'center');
                }
            } catch (err) {
                // console.log(err);
                errorAjax;
            }
        }

        function genPantryDetail() {
            $("#tbl_package_menu").find("tbody").empty();
            if (pantryPackageDetailCollection != null)  {
                let itemHtml;

                $.each(pantryPackageDetailCollection, function (key, item) { 
                    itemHtml = `
                        <tr id="pkg-detail-row-${item.id}">
                            <td style="word-wrap: break-word">${key+1}</td>
                            <td style="word-wrap: break-word">${item.name}</td>
                            <td style="word-wrap: break-word">${item.description}</td>
                            <td style="word-wrap: break-word">
                                <div class="form-line">
                                    <input autocomplete="off" type="text" class="form-control number-without-arrow inp_note_package_detail" value="${item.note}">
                                </div>
                            </td>
                            <td>
                                <div class="form-line">
                                    <input autocomplete="off" type="number" class="form-control text-center number-without-arrow inp_qty_package_detail" value="${item.qty}">
                                </div>
                            </td>
                        </tr>
                    `;
            
                    $("#tbl_package_menu").find("tbody").append(itemHtml);
                    $(`#pkg-detail-row-${item.id}`).data("pkgDetailId", item.id);
                });
            }
        }

        $(document).on("keyup", ".inp_qty_package_detail", function () {
            const t = $(this);
            let row = t.parents("tr");
            let qty = t.val();
            let packageDetailID = row.data("pkgDetailId");
            
            $.each(pantryPackageDetailCollection, function (key, item) { 
                if (item.id == packageDetailID) {
                    pantryPackageDetailCollection[key]["qty"] = parseInt(qty);
                }
            });
        });

        $(document).on("keyup", ".inp_note_package_detail", function () {
            const t = $(this);
            let row = t.parents("tr");
            let note = t.val();
            let packageDetailID = row.data("pkgDetailId");
            
            $.each(pantryPackageDetailCollection, function (key, item) { 
                if (item.id == packageDetailID) {
                    pantryPackageDetailCollection[key]["note"] = note;
                }
            });
        });
    
        $("#id_new_order_meeting_list").on("change", function () {
            const t = $(this);
            const ttl = t.find(':selected').data('attendees');
            ttlAttendees = ttl;

            $.each(pantryPackageDetailCollection, function (key, item) { 
                pantryPackageDetailCollection[key]["qty"] = parseInt(ttlAttendees);
            });

            genPantryDetail();
        });

        async function getInProgressMeetingList() {
            let bs = $('#id_baseurlapi').val();
            try {
                var data = await $.ajax({
                    type: "Get",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: bs + "@Model.GetInProgressBookings",
                });

                if (data.status == "success")
                {
                    meetingListCollection =  data.collection;

                    initMeetingList();
                } else {
                    var msg = "Your session is expired, login again !!!";
                    showNotification('alert-danger', msg, 'top', 'center');
                }
            } catch (err) {
                // console.log(err);
                errorAjax;
            }
        }

        function initMeetingList() {
            $("#id_new_order_meeting_list").empty();
            $("#id_new_order_meeting_list").append("<option>Select Meeting</option>");

            $.each(meetingListCollection, function (_, item) { 
                let opt = document.createElement("option");
                let date = `${moment(item.date).format("DD MMM YYYY")} ${moment(item.start).format("HH:mm")} - ${moment(item.end).format("HH:mm")}`;

                $(opt).html(`${item.title} - ${item.room_name} <br> <small><b>(${date})</b></small>`);
                $(opt).val(item.booking_id);
                $(opt).data("attendees", item.attendees);

                $("#id_new_order_meeting_list").append(opt);
            });
            select_enable();
        }
    
        function createNewOrder() {
            $("#frm_new_order").trigger("submit");
        }

        var iajx = "";
        $("#frm_new_order").on("submit", function(e) {
            e.preventDefault();
            if (iajx != "") {
                iajx.abort();
            }

            const form = $(this);
            let data = form.serializeArray();

            if (pantryPackageDetailCollection != null) {
                $.each(pantryPackageDetailCollection, function (_, item) { 
                    let d = {
                        menu_id: item.id,
                        pantry_id: item.pantry_id,
                        qty: item.qty,
                        note: item.note,
                    }
                    data.push({name: "menu_items[]", value: JSON.stringify(d)});
                });
            }

            // Trigger HTML5 validity.
            var reportValidity = form[0].reportValidity();

            if(reportValidity) {
                var bs = $('#id_baseurlapi').val();

                iajx = $.ajax({
                    type: "POST",
                    // contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    url: bs + "@Model.CreateNewOrder",
                    // data: objectify_form(form.serializeArray()),
                    // data: form.serialize(),
                    data: $.param(data),
                    beforeSend: function()
                    {
                        $('#id_loader').html('<div class="linePreloader"></div>');
                        disableAllForm();
                    },
                    success: function (data) {
                        $('#id_loader').html('');
                        enabledAllForm();
                        if (data.status == "success") {
                            init();
                            $("#id_mdl_new_order").modal("hide");
                        } else {
                            var msg = "Your session is expired, login again !!!";
                            if (data.msg != undefined || data.msg != "") {
                                msg = data.msg;
                            }
                            showNotification('alert-danger', msg, 'top', 'center');
                        }
                    },
                    error: errorAjax,
                    complete: function(data) {
                        enabledAllForm();
                    }
                });
            }
        });

        function disableAllForm()
        {
            $(':input','#frm_new_order').prop("disabled", true);
        }

        function enabledAllForm()
        {
            $(':input','#frm_new_order').prop("disabled", false);
        }

        function openDetail(t) {
            let orderId = t.data("id");
            console.log(orderId);
            let bs = $('#id_baseurlapi').val();

            $.ajax({
                url: bs + "@Model.GetOrderDetail" + "/" + orderId,
                dataType: "json",
                type: "GET",
                // data: form,
                // processData: false,
                // contentType: false,
                beforeSend: function() {
                    $('#id_loader').html('<div class="linePreloader"></div>');
                    Swal.fire({
                        title: 'Please Wait !',
                        html: 'Process to cancel meeting',
                        allowOutsideClick: false,
                        onBeforeOpen: () => {
                            Swal.showLoading()
                        },
                    });
                },
                success: function(data) {
                    Swal.close();
                    $('#id_loader').html('');
                    if (data.status == "success") {
                        let collection = data.collection;
                        let orderDetail = collection.order_detail;
                        let tbody = "";
                        if (orderDetail.length > 0) {
                            orderDetail.forEach((item, index) => {
                                tbody += `
                                    <tr>
                                        <td style="text-align: center;">${index + 1}</td>
                                        <td>${item.name}</td>
                                        <td style="text-align: center;">${item.qty}</td>
                                        <td>${item.note}</td>
                                    </tr>
                                `;
                            });
                        } else {
                            tbody = `
                                <tr>
                                    <td colspan="4" style="text-align: center;">No data available</td>
                                </tr>
                            `;
                        }
                        
                        Swal.fire({
                            title: "",
                            text: "",
                            type: "",
                            customClass: "swal-wide",
                            showConfirmButton: false,
                            showCancelButton: true,
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Close !',
                            html: `
                                <div class="card" style="width: 100%; text-align: left; border: 0px !important; box-shadow: none;">
                                    <div class="card-body">
                                        <div class="card-title" style="font-size: 20px; padding-bottom: 16px;"><b>Order Detail</b></div>
                                        <div class"card-text" style="font-size: 14px; padding-bottom: 16px;">
                                            <table class="table table-striped">
                                                <thead>
                                                    <tr>
                                                        <th style="text-align: center;">No</th>
                                                        <th style="text-align: center;">Order Item</th>
                                                        <th style="text-align: center;">Qty</th>
                                                        <th style="text-align: center;">Note</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    ${tbody}
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            `
                        });
                    } else {
                        showNotification('alert-danger', "Get data failed!!!", 'bottom', 'left')
                    }
                },
                complete: function() {
                    $('#id_loader').html('');
                },
                error: errorAjax,
            });
        }
    </script>
}
